#include <stdio.h>
#include <iostream>
#include <math.h>
#include <thread>
#include <unordered_map>

#define NUM_THREADS 8

using namespace std;
/*
 *
 * a = 123456
 * real	180m33.825s
 * user	48m9.754s
 * sys	49m21.578s
 *
 */ 
unordered_map<int, int> numberWithMods[123457];
double getUpperC(double a, int b){
    return pow((a-b), 1.0f/6) * 
           pow((a+b), 1.0f/6) *
           pow(a, 1.0f/6) *
           pow(a, 1.0f/6) *
           pow((a-b+(b/a)*b), 1.0f/6) *
           pow((a+b+(b/a)*b), 1.0f/6);
}


double getLowerC(double a, int b){
    return pow((a-b), 1.0f/6) * 
           pow((a+b), 1.0f/6) *
           pow(a, 1.0f/6) *
           pow(a, 1.0f/6) *
           pow((a-b+(b/a)*b), 1.0f/6) *
           pow((a+b+(b/a)*b), 1.0f/6)/pow(4, 1.0f/6);
}


double getUpperD(double a, int b, int c){
    return a * pow((1-(b/a)*(b/a)*(b/a)*(b/a)*(b/a)*(b/a)-(c/a)*(c/a)*(c/a)*(c/a)*(c/a)*(c/a)),1.0f/6);
}


double getLowerD(double a, int b, int c){
    return a * pow((1-(b/a)*(b/a)*(b/a)*(b/a)*(b/a)*(b/a)-(c/a)*(c/a)*(c/a)*(c/a)*(c/a)*(c/a)),1.0f/6)/pow(3,1.0f/6);
}


int calcModOf6Power(uint64_t base, int mod){
    int exp = 6;
    int res = 1;
    while (exp > 0) {
       if (exp % 2 == 1)
          res= (res * base) % mod;
       exp = exp >> 1;
       base = (base * base) % mod;
       //base = ((base % mod) * (base % mod)) % mod;
    }
    return res;

}
int getModOf6Power(int base, int mod){
    //cout << "base " << base <<", mod " << mod << endl;
    return numberWithMods[base].at(mod);
}


int getLeftModSubIn3Numbers(int prime, int a, int b, int c){
    int result = getModOf6Power(a, prime) - getModOf6Power(b, prime) - getModOf6Power(c, prime);
    while (result < 0){
        result += prime;
    }
    return result;
}

bool isDecomposableIn3Numbers(int a, int b, int c){
    //bool result = true;
    //int primes[4] = {13,19,31,37};
    int tmp = getLeftModSubIn3Numbers(7,a,b,c);
    
    switch(tmp){  case 5:  return false; case  6:return false;}
    if(getLeftModSubIn3Numbers(13,a,b,c) == 10)return false;

    tmp = getLeftModSubIn3Numbers(19,a,b,c);
    switch(tmp){ case  5 :  return false; case  16 :  return false; case 17: return false;}

    tmp = getLeftModSubIn3Numbers(31,a,b,c);
    //switch(tmp){  case 15 :  return false; case 23 :  return false; case  27 :  return false; case  29:  return false; case 30) return false;
    switch(tmp){
        case 15: case 23: case 27: case 29: case 30:
            return false;

    }

    tmp = getLeftModSubIn3Numbers(37,a,b,c);
    switch(tmp){  case 4:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  14:  return false; case  24:  return false; case  34: 
        return false; 
    }
    return true;
}




unordered_map<int, int> generateHashMapForNumber(int n){
    int primes[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 
                    61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 
                    137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 
                    211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 
                    283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 
                    379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 
                    461, 463, 467, 479, 487, 491, 499};
    unordered_map<int, int> umap;
    for (int p : primes){
        umap[p] = calcModOf6Power(n, p);
    }
    //cout << "size of array for number " << n << " is " << sizeof(umap) << endl;
    return umap;

}

double getUpperE(double a, int b, int c, int d){
    return a * pow((1-(b/a)*(b/a)*(b/a)*(b/a)*(b/a)*(b/a)-(c/a)*(c/a)*(c/a)*(c/a)*(c/a)*(c/a)-(d/a)*(d/a)*(d/a)*(d/a)*(d/a)*(d/a)), 1.0f/6);
}

double getLowerE(double a, int b, int c, int d){
    return a * pow((1-(b/a)*(b/a)*(b/a)*(b/a)*(b/a)*(b/a)-(c/a)*(c/a)*(c/a)*(c/a)*(c/a)*(c/a)-(d/a)*(d/a)*(d/a)*(d/a)*(d/a)*(d/a))/2, 1.0f/6);
}

double getUpperF(double a, int b, int c, int d, int e){
    return a * pow((1-(b/a)*(b/a)*(b/a)*(b/a)*(b/a)*(b/a)-(c/a)*(c/a)*(c/a)*(c/a)*(c/a)*(c/a)-(d/a)*(d/a)*(d/a)*(d/a)*(d/a)*(d/a)-(e/a)*(e/a)*(e/a)*(e/a)*(e/a)*(e/a)), 1.0f/6);
}

int getLeftModSubIn2Numbers(int prime, int a, int b, int c, int d){
    int result = getModOf6Power(a, prime) - getModOf6Power(b, prime) - getModOf6Power(c, prime) - getModOf6Power(d, prime);
    while (result < 0){
        result += prime;
    }
    return result;
}

int getLeftModSubIn1Numbers(int prime, int a, int b, int c, int d, int e){
    int result = getModOf6Power(a, prime) - getModOf6Power(b, prime) - getModOf6Power(c, prime) - getModOf6Power(d, prime) - getModOf6Power(e, prime);
    while (result < 0){
        result += prime;
    }
    return result;
}


bool isABCDEFModEqual(int a, int b, int c, int d, int e, int f){
    //there are 168 primes up to 1000
    //int primes1000[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997};
    int primes1000[] = {2, 3, 5, 7};
    //for(int i = 0; i < 168; i++){
    for(int i = 0; i < 4; i++){
        int result = getModOf6Power(a, primes1000[i]) - getModOf6Power(b, primes1000[i]) - 
                    getModOf6Power(c, primes1000[i]) - getModOf6Power(d, primes1000[i]) - 
                     getModOf6Power(e, primes1000[i]) - getModOf6Power(f, primes1000[i]);
        // printf("getModOf6Power(a, primes1000[i]): %d\n", getModOf6Power(a, primes1000[i]));
        // printf("getModOf6Power(b, primes1000[i]): %d\n", getModOf6Power(b, primes1000[i]));
        // printf("getModOf6Power(c, primes1000[i]): %d\n", getModOf6Power(c, primes1000[i]));
        // printf("getModOf6Power(d, primes1000[i]): %d\n", getModOf6Power(d, primes1000[i]));
        // printf("getModOf6Power(e, primes1000[i]): %d\n", getModOf6Power(e, primes1000[i]));
        // printf("getModOf6Power(f, primes1000[i]): %d\n", getModOf6Power(f, primes1000[i]));
        // printf("primes1000[i]: %d\n", primes1000[i]);
        // printf("aInt: %d, bInt: %d, cInt: %d, dInt: %d, eInt: %d, fInt: %d, i: %d\n", a, b, c, d, e, f, i);
        // printf("result before while: %d\n", result);
        
        while (result < 0){
            result += primes1000[i];
        }
        if(result != 0){
            // printf("getModOf6Power(a, primes1000[i]): %d\n", getModOf6Power(a, primes1000[i]));
            // printf("getModOf6Power(b, primes1000[i]): %d\n", getModOf6Power(b, primes1000[i]));
            // printf("getModOf6Power(c, primes1000[i]): %d\n", getModOf6Power(c, primes1000[i]));
            // printf("getModOf6Power(d, primes1000[i]): %d\n", getModOf6Power(d, primes1000[i]));
            // printf("getModOf6Power(e, primes1000[i]): %d\n", getModOf6Power(e, primes1000[i]));
            // printf("getModOf6Power(f, primes1000[i]): %d\n", getModOf6Power(f, primes1000[i]));
            // printf("aInt: %d, bInt: %d, cInt: %d, dInt: %d, eInt: %d, fInt: %d, i: %d\n", a, b, c, d, e, f, i);
            // printf("primes1000[i]: %d\n", primes1000[i]);
            // printf("i in isABCDEFModEqual is :%d, result is: %d.\n", i, result);
            return false;
        }
    }

    return true;
}


bool isDecomposableIn2Numbers(int a, int b, int c, int d){
    //bool result = true;
    //int primes[12] = {7,13,19,31,37,43,61,67,73,79,109,139};
    int tmp = getLeftModSubIn2Numbers(7,a,b,c,d);
    switch(tmp){ case  4:  return false; case  5:  return false; case  6:
        return false;
    }
    
    tmp = getLeftModSubIn2Numbers(13,a,b,c,d);
    switch(tmp){  case 3:  return false; case  4:  return false; case  9:  return false; case  10:
        return false;
    }
    tmp = getLeftModSubIn2Numbers(19,a,b,c,d);
    switch(tmp){  case 4:  return false; case  5:  return false; case  6:  return false; case  9:  return false; case  10:  return false; case  13:  return false; case  15:  return false; case  16:  return false; case  17:
        return false;
    }

    tmp = getLeftModSubIn2Numbers(31,a,b,c,d);
    switch(tmp){  case 7:  return false; case  11:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  19: case  21:  return false; case  22:  return false; case  23:  return false; case  25:  return false; case  26:  return false; case  27: case  28:  return false; case  29:  return false; case  30:
        return false;
    }
    tmp = getLeftModSubIn2Numbers(37,a,b,c,d);
    switch(tmp){  case 3:  return false; case  4: case 5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  13: case 14:  return false; case  18:  return false; case  19:  return false; case  23:  return false; case  24:  return false; case  29:  return false; case  30: case  31:  return false; case  32:  return false; case  33:  return false; case  34:
        return false;
    }
    tmp = getLeftModSubIn2Numbers(43,a,b,c,d);
    switch(tmp){  case 6:  return false; case  7:  return false; case  10:  return false; case  18: case  23:  return false; case  24:  return false; case  26: case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  34:  return false; case  38:  return false; case  40:
        return false;
    }
    tmp = getLeftModSubIn2Numbers(61,a,b,c,d);
    switch(tmp){  case 5:  return false; case  13:  return false; case  15:  return false; case  16:  return false; case  22:  return false; case  39: case  45:  return false; case  46:  return false; case  48:  return false; case  56:
        return false;
    }

    tmp = getLeftModSubIn2Numbers(67,a,b,c,d);
    switch(tmp){  case 3:  return false; case  5:  return false; case  8:  return false; case  27:  return false; case  42:  return false; case  43:  return false; case  45: case  52:  return false; case  53:  return false; case  58:  return false; case  66:
        return false;
    }
    tmp = getLeftModSubIn2Numbers(73,a,b,c,d);
    switch(tmp){  case 13:  return false; case  14:  return false; case  20:  return false; case  29:  return false; case  31:  return false; case  34:  return false; case  39: case  42:  return false; case  44:  return false; case  53:  return false; case  59:  return false; case  60:
        return false;
    }

    tmp = getLeftModSubIn2Numbers(79,a,b,c,d);
    switch(tmp){  case 12:  return false; case  14:  return false; case  15:  return false; case  17:  return false; case  27:  return false; case  33:  return false; case  41: case  57:  return false; case  58:  return false; case  61:  return false; case  69:  return false; case  71:  return false; case  78:
        return false;
    }
    tmp = getLeftModSubIn2Numbers(109,a,b,c,d);
    switch(tmp){  case 6:  return false; case  10:  return false; case  13:  return false; case  14:  return false; case  24:  return false; case  40:  return false; case  51: case  52:  return false; case  53:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  69:  return false; case  85: case  95:  return false; case  96: case  99:  return false; case  103:
        return false;
    }
    tmp = getLeftModSubIn2Numbers(139,a,b,c,d);
    switch(tmp){  case 8:  return false; case  10:  return false; case  14:  return false; case  23:  return false; case  27:  return false; case  33:  return false; case  39: case  48:  return false; case  59:  return false; case  60:  return false; case  62:  return false; case  74:  return false; case  75:  return false; case  76: case  82:  return false; case  84:  return false; case  87:  return false; case  94:  return false; case  95:  return false; case  103:  return false; case  105: case  133:  return false; case  138:
        return false;
    }
    return true;
}
bool isDecomposableIn1Numbers(int a, int b, int c, int d, int e){
    //bool result = true;
    //int primes[12] = {7,13,19,31,37,43,61,67,73,79,109,139};
    //int primes[15] = {3,5,7,11,13,17,19,23,29,31,37,41,43,47,53};
    int tmp = getLeftModSubIn1Numbers(3,a,b,c,d,e);
    switch(tmp){  case 2:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(5,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:
    return false;
    }
    tmp = getLeftModSubIn1Numbers(7,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  4:  return false; case  5:  return false; case  6:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(11,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  10:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(13,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  11:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(17,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  14:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(19,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(23,a,b,c,d,e);
    switch(tmp){  case 5:  return false; case  7:  return false; case  10:  return false; case  11:  return false; case  14:  return false; case  15:  return false; case  17:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:
        return false;
    }    
    tmp = getLeftModSubIn1Numbers(29,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  8:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  14:  return false; case  15:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  21:  return false; case  26:  return false; case  27:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(31,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  30:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(37,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  9:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(41,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  6:  return false; case  7:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  17:  return false; case  19:  return false; case  22:  return false; case  24:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  34:  return false; case  35:  return false; case  38:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(43,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  42:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(47,a,b,c,d,e);
    switch(tmp){  case 5:  return false; case  10:  return false; case  11:  return false; case  13:  return false; case  15:  return false; case  19:  return false; case  20:  return false; case  22:  return false; case  23:  return false; case  26:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  33:  return false; case  35:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(53,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  5:  return false; case  8:  return false; case  12:  return false; case  14:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  26:  return false; case  27:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  39:  return false; case  41:  return false; case  45:  return false; case  48:  return false; case  50:  return false; case  51:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(59,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  6:  return false; case  8:  return false; case  10:  return false; case  11:  return false; case  13:  return false; case  14:  return false; case  18:  return false; case  23:  return false; case  24:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  47:  return false; case  50:  return false; case  52:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  58:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(61,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  59:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(67,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  23:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  60:  return false; case  61:  return false; case  63:  return false; case  65:  return false; case  66:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(71,a,b,c,d,e);
    switch(tmp){  case 7:  return false; case  11:  return false; case  13:  return false; case  14:  return false; case  17:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  26:  return false; case  28:  return false; case  31:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  39:  return false; case  41:  return false; case  42:  return false; case  44:  return false; case  46:  return false; case  47:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  55:  return false; case  56:  return false; case  59:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(73,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  25:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  47:  return false; case  48:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  71:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(79,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  9:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  19:  return false; case  20:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  63:  return false; case  66:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(83,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  5:  return false; case  6:  return false; case  8:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  22:  return false; case  24:  return false; case  32:  return false; case  34:  return false; case  35:  return false; case  39:  return false; case  42:  return false; case  43:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  50:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  60:  return false; case  62:  return false; case  66:  return false; case  67:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  76:  return false; case  79:  return false; case  80:  return false; case  82:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(89,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  6:  return false; case  7:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  19:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  33:  return false; case  35:  return false; case  37:  return false; case  38:  return false; case  41:  return false; case  43:  return false; case  46:  return false; case  48:  return false; case  51:  return false; case  52:  return false; case  54:  return false; case  56:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  70:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  82:  return false; case  83:  return false; case  86:
        return false;
    }
    tmp = getLeftModSubIn1Numbers(97,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  48:  return false; case  49:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:
        return false;
    }
    
    
    tmp = getLeftModSubIn1Numbers(101,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  7:  return false; case  8:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  15:  return false; case  18:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  32:  return false; case  34:  return false; case  35:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  44:  return false; case  46:  return false; case  48:  return false; case  50:  return false; case  51:  return false; case  53:  return false; case  55:  return false; case  57:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  66:  return false; case  67:  return false; case  69:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  83:  return false; case  86:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  93:  return false; case  94:  return false; case  98:  return false; case  99:
    return false;}
    tmp = getLeftModSubIn1Numbers(103,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  77:  return false; case  78:  return false; case  80:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  101:  return false; case  102:
    return false;}
    tmp = getLeftModSubIn1Numbers(107,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  15:  return false; case  17:  return false; case  18:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  24:  return false; case  26:  return false; case  28:  return false; case  31:  return false; case  32:  return false; case  38:  return false; case  43:  return false; case  45:  return false; case  46:  return false; case  50:  return false; case  51:  return false; case  54:  return false; case  55:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  77:  return false; case  78:  return false; case  80:  return false; case  82:  return false; case  84:  return false; case  88:  return false; case  91:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  103:  return false; case  104:  return false; case  106:
    return false;}
    tmp = getLeftModSubIn1Numbers(109,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  44:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  65:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  106:  return false; case  107:
    return false;}
    tmp = getLeftModSubIn1Numbers(113,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  5:  return false; case  6:  return false; case  10:  return false; case  12:  return false; case  17:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  23:  return false; case  24:  return false; case  27:  return false; case  29:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  42:  return false; case  43:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  54:  return false; case  55:  return false; case  58:  return false; case  59:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  70:  return false; case  71:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  84:  return false; case  86:  return false; case  89:  return false; case  90:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  96:  return false; case  101:  return false; case  103:  return false; case  107:  return false; case  108:  return false; case  110:
    return false;}
    tmp = getLeftModSubIn1Numbers(127,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  17:  return false; case  18:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  48:  return false; case  49:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  74:  return false; case  75:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  121:  return false; case  123:  return false; case  124:  return false; case  125:  return false; case  126:
    return false;}
    tmp = getLeftModSubIn1Numbers(131,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  6:  return false; case  8:  return false; case  10:  return false; case  14:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  37:  return false; case  40:  return false; case  42:  return false; case  47:  return false; case  50:  return false; case  51:  return false; case  54:  return false; case  56:  return false; case  57:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  76:  return false; case  78:  return false; case  79:  return false; case  82:  return false; case  83:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  90:  return false; case  92:  return false; case  93:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  103:  return false; case  104:  return false; case  106:  return false; case  110:  return false; case  111:  return false; case  115:  return false; case  116:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  122:  return false; case  124:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  130:
    return false;}
    tmp = getLeftModSubIn1Numbers(137,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  5:  return false; case  6:  return false; case  10:  return false; case  12:  return false; case  13:  return false; case  20:  return false; case  21:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  27:  return false; case  29:  return false; case  31:  return false; case  33:  return false; case  35:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  57:  return false; case  58:  return false; case  62:  return false; case  66:  return false; case  67:  return false; case  70:  return false; case  71:  return false; case  75:  return false; case  79:  return false; case  80:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  102:  return false; case  104:  return false; case  106:  return false; case  108:  return false; case  110:  return false; case  111:  return false; case  113:  return false; case  114:  return false; case  116:  return false; case  117:  return false; case  124:  return false; case  125:  return false; case  127:  return false; case  131:  return false; case  132:  return false; case  134:
    return false;}
    tmp = getLeftModSubIn1Numbers(139,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  7:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  35:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  53:  return false; case  54:  return false; case  56:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  78:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  121:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  130:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:
    return false;}
    tmp = getLeftModSubIn1Numbers(149,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  8:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  18:  return false; case  21:  return false; case  23:  return false; case  27:  return false; case  32:  return false; case  34:  return false; case  38:  return false; case  40:  return false; case  41:  return false; case  43:  return false; case  44:  return false; case  48:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  62:  return false; case  65:  return false; case  66:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  74:  return false; case  75:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  83:  return false; case  84:  return false; case  87:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  101:  return false; case  105:  return false; case  106:  return false; case  108:  return false; case  109:  return false; case  111:  return false; case  115:  return false; case  117:  return false; case  122:  return false; case  126:  return false; case  128:  return false; case  131:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  141:  return false; case  146:  return false; case  147:
    return false;}
    tmp = getLeftModSubIn1Numbers(151,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  79:  return false; case  80:  return false; case  82:  return false; case  83:  return false; case  85:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  92:  return false; case  93:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  121:  return false; case  122:  return false; case  126:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  149:  return false; case  150:
    return false;}
    tmp = getLeftModSubIn1Numbers(157,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  15:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  47:  return false; case  48:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  57:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  91:  return false; case  92:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  100:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  109:  return false; case  110:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  119:  return false; case  120:  return false; case  121:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  125:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  142:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  152:  return false; case  154:  return false; case  155:
    return false;}
    tmp = getLeftModSubIn1Numbers(163,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  7:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  37:  return false; case  39:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  59:  return false; case  60:  return false; case  62:  return false; case  63:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  121:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  125:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  134:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  144:  return false; case  145:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  156:  return false; case  157:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:
    return false;}
    tmp = getLeftModSubIn1Numbers(167,a,b,c,d,e);
    switch(tmp){  case 5:  return false; case  10:  return false; case  13:  return false; case  15:  return false; case  17:  return false; case  20:  return false; case  23:  return false; case  26:  return false; case  30:  return false; case  34:  return false; case  35:  return false; case  37:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  43:  return false; case  45:  return false; case  46:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  55:  return false; case  59:  return false; case  60:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  73:  return false; case  74:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  82:  return false; case  83:  return false; case  86:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  95:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  113:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  123:  return false; case  125:  return false; case  129:  return false; case  131:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  142:  return false; case  143:  return false; case  145:  return false; case  146:  return false; case  148:  return false; case  149:  return false; case  151:  return false; case  153:  return false; case  155:  return false; case  156:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:
    return false;}
    tmp = getLeftModSubIn1Numbers(173,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  5:  return false; case  7:  return false; case  8:  return false; case  11:  return false; case  12:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  30:  return false; case  32:  return false; case  39:  return false; case  42:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  48:  return false; case  50:  return false; case  53:  return false; case  58:  return false; case  59:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  79:  return false; case  80:  return false; case  82:  return false; case  86:  return false; case  87:  return false; case  91:  return false; case  93:  return false; case  94:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  107:  return false; case  108:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  114:  return false; case  115:  return false; case  120:  return false; case  123:  return false; case  125:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  131:  return false; case  134:  return false; case  141:  return false; case  143:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  161:  return false; case  162:  return false; case  165:  return false; case  166:  return false; case  168:  return false; case  170:  return false; case  171:
    return false;}
    tmp = getLeftModSubIn1Numbers(179,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  10:  return false; case  11:  return false; case  18:  return false; case  21:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  28:  return false; case  30:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  37:  return false; case  38:  return false; case  40:  return false; case  41:  return false; case  44:  return false; case  50:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  58:  return false; case  62:  return false; case  63:  return false; case  69:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  78:  return false; case  79:  return false; case  84:  return false; case  86:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  94:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  109:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  122:  return false; case  123:  return false; case  127:  return false; case  128:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  136:  return false; case  137:  return false; case  140:  return false; case  143:  return false; case  148:  return false; case  150:  return false; case  152:  return false; case  154:  return false; case  157:  return false; case  159:  return false; case  160:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  170:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  178:
    return false;}
    tmp = getLeftModSubIn1Numbers(181,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  28:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  47:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  57:  return false; case  58:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  115:  return false; case  116:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  121:  return false; case  123:  return false; case  124:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  134:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  144:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  153:  return false; case  155:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  169:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  177:  return false; case  178:  return false; case  179:
    return false;}
    tmp = getLeftModSubIn1Numbers(191,a,b,c,d,e);
    switch(tmp){  case 7:  return false; case  11:  return false; case  14:  return false; case  19:  return false; case  21:  return false; case  22:  return false; case  28:  return false; case  29:  return false; case  31:  return false; case  33:  return false; case  35:  return false; case  37:  return false; case  38:  return false; case  41:  return false; case  42:  return false; case  44:  return false; case  47:  return false; case  53:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  66:  return false; case  70:  return false; case  71:  return false; case  73:  return false; case  74:  return false; case  76:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  91:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  99:  return false; case  101:  return false; case  105:  return false; case  106:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  116:  return false; case  119:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  126:  return false; case  127:  return false; case  131:  return false; case  132:  return false; case  137:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  145:  return false; case  146:  return false; case  148:  return false; case  151:  return false; case  152:  return false; case  155:  return false; case  157:  return false; case  159:  return false; case  161:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  171:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  178:  return false; case  179:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:
    return false;}
    tmp = getLeftModSubIn1Numbers(193,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  25:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  68:  return false; case  70:  return false; case  71:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  122:  return false; case  123:  return false; case  125:  return false; case  127:  return false; case  128:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  167:  return false; case  168:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  191:
    return false;}
    tmp = getLeftModSubIn1Numbers(197,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  5:  return false; case  8:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  17:  return false; case  18:  return false; case  20:  return false; case  21:  return false; case  27:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  35:  return false; case  38:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  48:  return false; case  50:  return false; case  52:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  82:  return false; case  84:  return false; case  86:  return false; case  87:  return false; case  89:  return false; case  91:  return false; case  94:  return false; case  95:  return false; case  98:  return false; case  99:  return false; case  102:  return false; case  103:  return false; case  106:  return false; case  108:  return false; case  110:  return false; case  111:  return false; case  113:  return false; case  115:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  125:  return false; case  126:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  145:  return false; case  147:  return false; case  149:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  159:  return false; case  162:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  170:  return false; case  176:  return false; case  177:  return false; case  179:  return false; case  180:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  189:  return false; case  192:  return false; case  194:  return false; case  195:
    return false;}
    tmp = getLeftModSubIn1Numbers(199,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  6:  return false; case  7:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  27:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  91:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  104:  return false; case  105:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  112:  return false; case  113:  return false; case  115:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  122:  return false; case  124:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  169:  return false; case  170:  return false; case  171:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:
    return false;}
    


    
    tmp = getLeftModSubIn1Numbers(211,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  12:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  56:  return false; case  57:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  77:  return false; case  78:  return false; case  80:  return false; case  81:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  108:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  124:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  149:  return false; case  150:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  170:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  210:
    return false;}
    tmp = getLeftModSubIn1Numbers(223,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  5:  return false; case  6:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  27:  return false; case  29:  return false; case  31:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  67:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  113:  return false; case  114:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  121:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  125:  return false; case  126:  return false; case  127:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  170:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  198:  return false; case  199:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  214:  return false; case  215:  return false; case  216:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  222:
    return false;}
    tmp = getLeftModSubIn1Numbers(227,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  5:  return false; case  6:  return false; case  8:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  17:  return false; case  18:  return false; case  20:  return false; case  22:  return false; case  24:  return false; case  31:  return false; case  32:  return false; case  35:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  41:  return false; case  42:  return false; case  45:  return false; case  46:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  58:  return false; case  60:  return false; case  61:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  72:  return false; case  80:  return false; case  83:  return false; case  86:  return false; case  88:  return false; case  91:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  98:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  111:  return false; case  114:  return false; case  115:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  123:  return false; case  124:  return false; case  125:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  130:  return false; case  135:  return false; case  137:  return false; case  138:  return false; case  140:  return false; case  142:  return false; case  143:  return false; case  145:  return false; case  146:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  168:  return false; case  170:  return false; case  174:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  183:  return false; case  184:  return false; case  187:  return false; case  191:  return false; case  193:  return false; case  194:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  204:  return false; case  206:  return false; case  208:  return false; case  211:  return false; case  215:  return false; case  216:  return false; case  217:  return false; case  218:  return false; case  220:  return false; case  223:  return false; case  224:  return false; case  226:
    return false;}
    tmp = getLeftModSubIn1Numbers(229,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  58:  return false; case  59:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  166:  return false; case  167:  return false; case  170:  return false; case  171:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  200:  return false; case  201:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  211:  return false; case  215:  return false; case  216:  return false; case  217:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  226:  return false; case  227:
    return false;}
    tmp = getLeftModSubIn1Numbers(233,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  5:  return false; case  6:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  17:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  24:  return false; case  27:  return false; case  34:  return false; case  35:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  47:  return false; case  48:  return false; case  53:  return false; case  54:  return false; case  57:  return false; case  59:  return false; case  61:  return false; case  65:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  73:  return false; case  75:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  90:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  99:  return false; case  103:  return false; case  106:  return false; case  108:  return false; case  111:  return false; case  114:  return false; case  115:  return false; case  118:  return false; case  119:  return false; case  122:  return false; case  125:  return false; case  127:  return false; case  130:  return false; case  134:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  143:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  158:  return false; case  160:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  168:  return false; case  172:  return false; case  174:  return false; case  176:  return false; case  179:  return false; case  180:  return false; case  185:  return false; case  186:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  198:  return false; case  199:  return false; case  206:  return false; case  209:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  216:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  227:  return false; case  228:  return false; case  230:
    return false;}
    tmp = getLeftModSubIn1Numbers(239,a,b,c,d,e);
    switch(tmp){  case 7:  return false; case  13:  return false; case  14:  return false; case  19:  return false; case  21:  return false; case  23:  return false; case  26:  return false; case  28:  return false; case  35:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  46:  return false; case  47:  return false; case  52:  return false; case  53:  return false; case  56:  return false; case  57:  return false; case  59:  return false; case  63:  return false; case  65:  return false; case  69:  return false; case  70:  return false; case  73:  return false; case  74:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  82:  return false; case  84:  return false; case  86:  return false; case  89:  return false; case  92:  return false; case  94:  return false; case  95:  return false; case  97:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  111:  return false; case  112:  return false; case  114:  return false; case  115:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  123:  return false; case  126:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  143:  return false; case  146:  return false; case  148:  return false; case  149:  return false; case  151:  return false; case  152:  return false; case  154:  return false; case  156:  return false; case  158:  return false; case  159:  return false; case  164:  return false; case  167:  return false; case  168:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  175:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  181:  return false; case  184:  return false; case  185:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  194:  return false; case  195:  return false; case  199:  return false; case  203:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  212:  return false; case  214:  return false; case  215:  return false; case  217:  return false; case  219:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  230:  return false; case  231:  return false; case  233:  return false; case  234:  return false; case  235:  return false; case  236:  return false; case  237:  return false; case  238:
    return false;}
    tmp = getLeftModSubIn1Numbers(241,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  7:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  121:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  169:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  178:  return false; case  179:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  212:  return false; case  213:  return false; case  215:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  225:  return false; case  226:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  230:  return false; case  231:  return false; case  232:  return false; case  234:  return false; case  237:  return false; case  238:  return false; case  239:
    return false;}
    tmp = getLeftModSubIn1Numbers(251,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  6:  return false; case  8:  return false; case  10:  return false; case  11:  return false; case  14:  return false; case  18:  return false; case  19:  return false; case  24:  return false; case  26:  return false; case  29:  return false; case  30:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  37:  return false; case  40:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  46:  return false; case  47:  return false; case  50:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  59:  return false; case  61:  return false; case  62:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  82:  return false; case  87:  return false; case  90:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  102:  return false; case  104:  return false; case  107:  return false; case  109:  return false; case  111:  return false; case  116:  return false; case  120:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  141:  return false; case  143:  return false; case  145:  return false; case  146:  return false; case  148:  return false; case  150:  return false; case  151:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  162:  return false; case  163:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  191:  return false; case  193:  return false; case  199:  return false; case  200:  return false; case  202:  return false; case  203:  return false; case  206:  return false; case  210:  return false; case  212:  return false; case  213:  return false; case  215:  return false; case  216:  return false; case  220:  return false; case  223:  return false; case  224:  return false; case  226:  return false; case  228:  return false; case  229:  return false; case  230:  return false; case  231:  return false; case  234:  return false; case  235:  return false; case  236:  return false; case  238:  return false; case  239:  return false; case  242:  return false; case  244:  return false; case  246:  return false; case  247:  return false; case  248:  return false; case  250:
    return false;}
    tmp = getLeftModSubIn1Numbers(257,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  10:  return false; case  12:  return false; case  14:  return false; case  19:  return false; case  20:  return false; case  24:  return false; case  27:  return false; case  28:  return false; case  33:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  43:  return false; case  45:  return false; case  47:  return false; case  48:  return false; case  51:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  69:  return false; case  71:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  80:  return false; case  82:  return false; case  83:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  90:  return false; case  91:  return false; case  93:  return false; case  94:  return false; case  96:  return false; case  97:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  112:  return false; case  115:  return false; case  119:  return false; case  125:  return false; case  126:  return false; case  127:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  138:  return false; case  142:  return false; case  145:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  152:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  160:  return false; case  161:  return false; case  163:  return false; case  164:  return false; case  166:  return false; case  167:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  174:  return false; case  175:  return false; case  177:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  186:  return false; case  188:  return false; case  191:  return false; case  192:  return false; case  194:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  206:  return false; case  209:  return false; case  210:  return false; case  212:  return false; case  214:  return false; case  216:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  224:  return false; case  229:  return false; case  230:  return false; case  233:  return false; case  237:  return false; case  238:  return false; case  243:  return false; case  245:  return false; case  247:  return false; case  250:  return false; case  251:  return false; case  252:  return false; case  254:
    return false;}
    tmp = getLeftModSubIn1Numbers(263,a,b,c,d,e);
    switch(tmp){  case 5:  return false; case  7:  return false; case  10:  return false; case  14:  return false; case  15:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  38:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  45:  return false; case  47:  return false; case  53:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  63:  return false; case  65:  return false; case  67:  return false; case  71:  return false; case  73:  return false; case  76:  return false; case  77:  return false; case  79:  return false; case  80:  return false; case  82:  return false; case  84:  return false; case  85:  return false; case  87:  return false; case  90:  return false; case  91:  return false; case  94:  return false; case  97:  return false; case  101:  return false; case  106:  return false; case  107:  return false; case  110:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  123:  return false; case  125:  return false; case  126:  return false; case  127:  return false; case  130:  return false; case  131:  return false; case  134:  return false; case  135:  return false; case  139:  return false; case  141:  return false; case  142:  return false; case  146:  return false; case  152:  return false; case  154:  return false; case  155:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  167:  return false; case  168:  return false; case  170:  return false; case  171:  return false; case  174:  return false; case  175:  return false; case  177:  return false; case  180:  return false; case  182:  return false; case  185:  return false; case  188:  return false; case  189:  return false; case  191:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  197:  return false; case  199:  return false; case  201:  return false; case  202:  return false; case  209:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  214:  return false; case  215:  return false; case  217:  return false; case  219:  return false; case  220:  return false; case  224:  return false; case  226:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  230:  return false; case  231:  return false; case  232:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  240:  return false; case  241:  return false; case  245:  return false; case  246:  return false; case  247:  return false; case  250:  return false; case  251:  return false; case  252:  return false; case  254:  return false; case  255:  return false; case  257:  return false; case  259:  return false; case  260:  return false; case  261:  return false; case  262:
    return false;}
    tmp = getLeftModSubIn1Numbers(269,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  7:  return false; case  8:  return false; case  10:  return false; case  12:  return false; case  15:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  22:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  35:  return false; case  39:  return false; case  40:  return false; case  42:  return false; case  46:  return false; case  48:  return false; case  50:  return false; case  59:  return false; case  60:  return false; case  63:  return false; case  68:  return false; case  69:  return false; case  71:  return false; case  72:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  82:  return false; case  83:  return false; case  85:  return false; case  86:  return false; case  88:  return false; case  90:  return false; case  91:  return false; case  94:  return false; case  95:  return false; case  98:  return false; case  101:  return false; case  102:  return false; case  104:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  116:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  132:  return false; case  134:  return false; case  135:  return false; case  137:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  153:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  165:  return false; case  167:  return false; case  168:  return false; case  171:  return false; case  174:  return false; case  175:  return false; case  178:  return false; case  179:  return false; case  181:  return false; case  183:  return false; case  184:  return false; case  186:  return false; case  187:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  197:  return false; case  198:  return false; case  200:  return false; case  201:  return false; case  206:  return false; case  209:  return false; case  210:  return false; case  219:  return false; case  221:  return false; case  223:  return false; case  227:  return false; case  229:  return false; case  230:  return false; case  234:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  240:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  247:  return false; case  250:  return false; case  251:  return false; case  252:  return false; case  254:  return false; case  257:  return false; case  259:  return false; case  261:  return false; case  262:  return false; case  266:  return false; case  267:
    return false;}
    tmp = getLeftModSubIn1Numbers(271,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  27:  return false; case  29:  return false; case  30:  return false; case  32:  return false; case  33:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  40:  return false; case  42:  return false; case  43:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  56:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  70:  return false; case  71:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  88:  return false; case  89:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  99:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  120:  return false; case  121:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  140:  return false; case  142:  return false; case  143:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  168:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  186:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  214:  return false; case  215:  return false; case  216:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  225:  return false; case  226:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  230:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  234:  return false; case  235:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  240:  return false; case  243:  return false; case  245:  return false; case  246:  return false; case  249:  return false; case  250:  return false; case  251:  return false; case  253:  return false; case  254:  return false; case  255:  return false; case  256:  return false; case  257:  return false; case  259:  return false; case  260:  return false; case  261:  return false; case  262:  return false; case  263:  return false; case  264:  return false; case  265:  return false; case  266:  return false; case  267:  return false; case  269:  return false; case  270:
    return false;}
    tmp = getLeftModSubIn1Numbers(277,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  14:  return false; case  15:  return false; case  17:  return false; case  18:  return false; case  20:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  67:  return false; case  68:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  75:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  121:  return false; case  123:  return false; case  124:  return false; case  125:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  144:  return false; case  145:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  156:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  200:  return false; case  202:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  209:  return false; case  210:  return false; case  212:  return false; case  214:  return false; case  215:  return false; case  216:  return false; case  217:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  226:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  230:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  234:  return false; case  235:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  240:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  244:  return false; case  245:  return false; case  246:  return false; case  248:  return false; case  249:  return false; case  251:  return false; case  252:  return false; case  253:  return false; case  254:  return false; case  255:  return false; case  257:  return false; case  259:  return false; case  260:  return false; case  262:  return false; case  263:  return false; case  265:  return false; case  266:  return false; case  267:  return false; case  268:  return false; case  269:  return false; case  270:  return false; case  271:  return false; case  272:  return false; case  274:  return false; case  275:
    return false;}
    tmp = getLeftModSubIn1Numbers(281,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  6:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  15:  return false; case  19:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  27:  return false; case  30:  return false; case  37:  return false; case  38:  return false; case  41:  return false; case  42:  return false; case  44:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  51:  return false; case  52:  return false; case  54:  return false; case  55:  return false; case  60:  return false; case  61:  return false; case  65:  return false; case  67:  return false; case  71:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  99:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  107:  return false; case  108:  return false; case  110:  return false; case  113:  return false; case  115:  return false; case  117:  return false; case  120:  return false; case  122:  return false; case  127:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  139:  return false; case  142:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  150:  return false; case  151:  return false; case  152:  return false; case  154:  return false; case  159:  return false; case  161:  return false; case  164:  return false; case  166:  return false; case  168:  return false; case  171:  return false; case  173:  return false; case  174:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  182:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  210:  return false; case  214:  return false; case  216:  return false; case  220:  return false; case  221:  return false; case  226:  return false; case  227:  return false; case  229:  return false; case  230:  return false; case  233:  return false; case  234:  return false; case  235:  return false; case  237:  return false; case  239:  return false; case  240:  return false; case  243:  return false; case  244:  return false; case  251:  return false; case  254:  return false; case  255:  return false; case  257:  return false; case  258:  return false; case  259:  return false; case  260:  return false; case  262:  return false; case  266:  return false; case  268:  return false; case  269:  return false; case  270:  return false; case  275:  return false; case  278:
    return false;}
    tmp = getLeftModSubIn1Numbers(283,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  52:  return false; case  53:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  121:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  125:  return false; case  126:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  142:  return false; case  143:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  153:  return false; case  154:  return false; case  156:  return false; case  157:  return false; case  159:  return false; case  160:  return false; case  162:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  169:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  205:  return false; case  206:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  214:  return false; case  215:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  226:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  234:  return false; case  235:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  245:  return false; case  246:  return false; case  247:  return false; case  248:  return false; case  249:  return false; case  252:  return false; case  254:  return false; case  255:  return false; case  257:  return false; case  258:  return false; case  259:  return false; case  260:  return false; case  261:  return false; case  263:  return false; case  265:  return false; case  266:  return false; case  267:  return false; case  268:  return false; case  269:  return false; case  270:  return false; case  271:  return false; case  272:  return false; case  273:  return false; case  274:  return false; case  276:  return false; case  277:  return false; case  278:  return false; case  279:  return false; case  280:  return false; case  282:
    return false;}
    tmp = getLeftModSubIn1Numbers(293,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  5:  return false; case  7:  return false; case  8:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  23:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  32:  return false; case  34:  return false; case  41:  return false; case  42:  return false; case  44:  return false; case  45:  return false; case  47:  return false; case  48:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  62:  return false; case  63:  return false; case  66:  return false; case  70:  return false; case  72:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  85:  return false; case  86:  return false; case  89:  return false; case  92:  return false; case  93:  return false; case  98:  return false; case  99:  return false; case  101:  return false; case  103:  return false; case  105:  return false; case  106:  return false; case  108:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  122:  return false; case  125:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  134:  return false; case  136:  return false; case  138:  return false; case  139:  return false; case  142:  return false; case  146:  return false; case  147:  return false; case  151:  return false; case  154:  return false; case  155:  return false; case  157:  return false; case  159:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  168:  return false; case  171:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  185:  return false; case  187:  return false; case  188:  return false; case  190:  return false; case  192:  return false; case  194:  return false; case  195:  return false; case  200:  return false; case  201:  return false; case  204:  return false; case  207:  return false; case  208:  return false; case  213:  return false; case  214:  return false; case  215:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  221:  return false; case  223:  return false; case  227:  return false; case  230:  return false; case  231:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  245:  return false; case  246:  return false; case  248:  return false; case  249:  return false; case  251:  return false; case  252:  return false; case  259:  return false; case  261:  return false; case  263:  return false; case  264:  return false; case  265:  return false; case  266:  return false; case  270:  return false; case  273:  return false; case  274:  return false; case  275:  return false; case  280:  return false; case  281:  return false; case  282:  return false; case  285:  return false; case  286:  return false; case  288:  return false; case  290:  return false; case  291:
    return false;}
    tmp = getLeftModSubIn1Numbers(307,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  5:  return false; case  7:  return false; case  8:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  18:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  25:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  69:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  78:  return false; case  80:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  98:  return false; case  99:  return false; case  100:  return false; case  104:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  121:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  125:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  150:  return false; case  151:  return false; case  152:  return false; case  154:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  168:  return false; case  169:  return false; case  170:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  180:  return false; case  181:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  214:  return false; case  215:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  225:  return false; case  226:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  230:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  234:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  240:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  244:  return false; case  245:  return false; case  246:  return false; case  247:  return false; case  248:  return false; case  249:  return false; case  251:  return false; case  252:  return false; case  253:  return false; case  254:  return false; case  255:  return false; case  257:  return false; case  258:  return false; case  260:  return false; case  261:  return false; case  262:  return false; case  263:  return false; case  264:  return false; case  265:  return false; case  266:  return false; case  267:  return false; case  268:  return false; case  270:  return false; case  271:  return false; case  274:  return false; case  276:  return false; case  277:  return false; case  278:  return false; case  279:  return false; case  281:  return false; case  282:  return false; case  283:  return false; case  284:  return false; case  285:  return false; case  286:  return false; case  287:  return false; case  288:  return false; case  290:  return false; case  291:  return false; case  292:  return false; case  293:  return false; case  294:  return false; case  296:  return false; case  297:  return false; case  298:  return false; case  300:  return false; case  301:  return false; case  302:  return false; case  303:  return false; case  306:
    return false;}
    tmp = getLeftModSubIn1Numbers(311,a,b,c,d,e);
    switch(tmp){  case 11:  return false; case  17:  return false; case  19:  return false; case  22:  return false; case  23:  return false; case  29:  return false; case  31:  return false; case  33:  return false; case  34:  return false; case  37:  return false; case  38:  return false; case  41:  return false; case  43:  return false; case  44:  return false; case  46:  return false; case  51:  return false; case  55:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  61:  return false; case  62:  return false; case  66:  return false; case  68:  return false; case  69:  return false; case  71:  return false; case  74:  return false; case  76:  return false; case  77:  return false; case  82:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  92:  return false; case  93:  return false; case  95:  return false; case  97:  return false; case  99:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  110:  return false; case  111:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  118:  return false; case  119:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  129:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  136:  return false; case  138:  return false; case  142:  return false; case  143:  return false; case  145:  return false; case  148:  return false; case  149:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  161:  return false; case  164:  return false; case  165:  return false; case  167:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  174:  return false; case  176:  return false; case  177:  return false; case  181:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  190:  return false; case  191:  return false; case  194:  return false; case  198:  return false; case  199:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  211:  return false; case  213:  return false; case  215:  return false; case  217:  return false; case  220:  return false; case  221:  return false; case  222:  return false; case  227:  return false; case  228:  return false; case  230:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  236:  return false; case  238:  return false; case  239:  return false; case  241:  return false; case  244:  return false; case  246:  return false; case  247:  return false; case  248:  return false; case  251:  return false; case  255:  return false; case  257:  return false; case  258:  return false; case  259:  return false; case  261:  return false; case  262:  return false; case  263:  return false; case  264:  return false; case  266:  return false; case  269:  return false; case  271:  return false; case  272:  return false; case  275:  return false; case  276:  return false; case  279:  return false; case  281:  return false; case  283:  return false; case  284:  return false; case  285:  return false; case  286:  return false; case  287:  return false; case  290:  return false; case  291:  return false; case  293:  return false; case  295:  return false; case  296:  return false; case  297:  return false; case  298:  return false; case  299:  return false; case  301:  return false; case  302:  return false; case  303:  return false; case  304:  return false; case  305:  return false; case  306:  return false; case  307:  return false; case  308:  return false; case  309:  return false; case  310:
    return false;}
    tmp = getLeftModSubIn1Numbers(313,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  7:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  34:  return false; case  37:  return false; case  38:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  50:  return false; case  51:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  98:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  121:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  125:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  169:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  214:  return false; case  215:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  225:  return false; case  226:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  230:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  235:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  240:  return false; case  241:  return false; case  243:  return false; case  244:  return false; case  245:  return false; case  246:  return false; case  247:  return false; case  248:  return false; case  250:  return false; case  251:  return false; case  252:  return false; case  253:  return false; case  254:  return false; case  256:  return false; case  257:  return false; case  258:  return false; case  259:  return false; case  260:  return false; case  262:  return false; case  263:  return false; case  266:  return false; case  267:  return false; case  268:  return false; case  270:  return false; case  271:  return false; case  272:  return false; case  273:  return false; case  275:  return false; case  276:  return false; case  279:  return false; case  281:  return false; case  282:  return false; case  283:  return false; case  284:  return false; case  285:  return false; case  287:  return false; case  289:  return false; case  290:  return false; case  291:  return false; case  292:  return false; case  293:  return false; case  295:  return false; case  296:  return false; case  297:  return false; case  298:  return false; case  299:  return false; case  300:  return false; case  301:  return false; case  302:  return false; case  303:  return false; case  304:  return false; case  306:  return false; case  308:  return false; case  309:  return false; case  310:  return false; case  311:
    return false;}
    tmp = getLeftModSubIn1Numbers(317,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  5:  return false; case  8:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  27:  return false; case  29:  return false; case  30:  return false; case  32:  return false; case  33:  return false; case  35:  return false; case  41:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  50:  return false; case  52:  return false; case  55:  return false; case  56:  return false; case  62:  return false; case  68:  return false; case  69:  return false; case  71:  return false; case  72:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  78:  return false; case  80:  return false; case  84:  return false; case  86:  return false; case  88:  return false; case  91:  return false; case  93:  return false; case  97:  return false; case  98:  return false; case  102:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  111:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  122:  return false; case  125:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  137:  return false; case  139:  return false; case  140:  return false; case  143:  return false; case  146:  return false; case  147:  return false; case  151:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  158:  return false; case  159:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  166:  return false; case  170:  return false; case  171:  return false; case  174:  return false; case  177:  return false; case  178:  return false; case  180:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  195:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  206:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  211:  return false; case  215:  return false; case  219:  return false; case  220:  return false; case  224:  return false; case  226:  return false; case  229:  return false; case  231:  return false; case  233:  return false; case  237:  return false; case  239:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  245:  return false; case  246:  return false; case  248:  return false; case  249:  return false; case  255:  return false; case  261:  return false; case  262:  return false; case  265:  return false; case  267:  return false; case  269:  return false; case  270:  return false; case  271:  return false; case  272:  return false; case  276:  return false; case  282:  return false; case  284:  return false; case  285:  return false; case  287:  return false; case  288:  return false; case  290:  return false; case  295:  return false; case  296:  return false; case  297:  return false; case  298:  return false; case  299:  return false; case  300:  return false; case  303:  return false; case  304:  return false; case  305:  return false; case  309:  return false; case  312:  return false; case  314:  return false; case  315:
    return false;}
    tmp = getLeftModSubIn1Numbers(331,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  69:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  101:  return false; case  103:  return false; case  104:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  119:  return false; case  121:  return false; case  122:  return false; case  123:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  151:  return false; case  152:  return false; case  154:  return false; case  156:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  168:  return false; case  169:  return false; case  170:  return false; case  171:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  178:  return false; case  179:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  187:  return false; case  188:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  226:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  230:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  234:  return false; case  235:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  240:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  244:  return false; case  245:  return false; case  246:  return false; case  247:  return false; case  248:  return false; case  249:  return false; case  250:  return false; case  251:  return false; case  252:  return false; case  254:  return false; case  255:  return false; case  256:  return false; case  257:  return false; case  259:  return false; case  260:  return false; case  261:  return false; case  262:  return false; case  263:  return false; case  264:  return false; case  265:  return false; case  267:  return false; case  268:  return false; case  269:  return false; case  271:  return false; case  272:  return false; case  273:  return false; case  275:  return false; case  276:  return false; case  277:  return false; case  278:  return false; case  280:  return false; case  281:  return false; case  282:  return false; case  283:  return false; case  284:  return false; case  285:  return false; case  286:  return false; case  287:  return false; case  288:  return false; case  289:  return false; case  290:  return false; case  291:  return false; case  292:  return false; case  294:  return false; case  295:  return false; case  296:  return false; case  297:  return false; case  298:  return false; case  299:  return false; case  300:  return false; case  301:  return false; case  302:  return false; case  303:  return false; case  305:  return false; case  306:  return false; case  307:  return false; case  308:  return false; case  309:  return false; case  310:  return false; case  311:  return false; case  312:  return false; case  314:  return false; case  315:  return false; case  317:  return false; case  318:  return false; case  320:  return false; case  322:  return false; case  325:  return false; case  326:  return false; case  327:  return false; case  328:  return false; case  329:  return false; case  330:
    return false;}
    tmp = getLeftModSubIn1Numbers(337,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  37:  return false; case  38:  return false; case  40:  return false; case  41:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  50:  return false; case  51:  return false; case  53:  return false; case  54:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  122:  return false; case  124:  return false; case  125:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  149:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  163:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  169:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  174:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  188:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  215:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  225:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  230:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  235:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  240:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  244:  return false; case  245:  return false; case  246:  return false; case  247:  return false; case  248:  return false; case  249:  return false; case  250:  return false; case  251:  return false; case  253:  return false; case  254:  return false; case  255:  return false; case  256:  return false; case  257:  return false; case  259:  return false; case  260:  return false; case  261:  return false; case  262:  return false; case  263:  return false; case  264:  return false; case  265:  return false; case  266:  return false; case  267:  return false; case  268:  return false; case  269:  return false; case  270:  return false; case  271:  return false; case  272:  return false; case  274:  return false; case  275:  return false; case  276:  return false; case  277:  return false; case  278:  return false; case  279:  return false; case  280:  return false; case  283:  return false; case  284:  return false; case  286:  return false; case  287:  return false; case  291:  return false; case  292:  return false; case  293:  return false; case  296:  return false; case  297:  return false; case  299:  return false; case  300:  return false; case  302:  return false; case  303:  return false; case  304:  return false; case  305:  return false; case  306:  return false; case  307:  return false; case  308:  return false; case  309:  return false; case  311:  return false; case  313:  return false; case  314:  return false; case  315:  return false; case  316:  return false; case  317:  return false; case  318:  return false; case  319:  return false; case  320:  return false; case  321:  return false; case  322:  return false; case  323:  return false; case  324:  return false; case  325:  return false; case  326:  return false; case  327:  return false; case  328:  return false; case  332:  return false; case  333:  return false; case  334:  return false; case  335:
    return false;}
    tmp = getLeftModSubIn1Numbers(347,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  15:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  28:  return false; case  32:  return false; case  37:  return false; case  41:  return false; case  45:  return false; case  47:  return false; case  50:  return false; case  51:  return false; case  54:  return false; case  55:  return false; case  57:  return false; case  58:  return false; case  60:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  72:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  84:  return false; case  86:  return false; case  88:  return false; case  91:  return false; case  92:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  101:  return false; case  103:  return false; case  104:  return false; case  106:  return false; case  111:  return false; case  112:  return false; case  118:  return false; case  122:  return false; case  123:  return false; case  125:  return false; case  128:  return false; case  134:  return false; case  135:  return false; case  139:  return false; case  141:  return false; case  142:  return false; case  145:  return false; case  146:  return false; case  148:  return false; case  150:  return false; case  151:  return false; case  153:  return false; case  155:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  170:  return false; case  171:  return false; case  174:  return false; case  175:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  193:  return false; case  195:  return false; case  198:  return false; case  200:  return false; case  203:  return false; case  204:  return false; case  207:  return false; case  209:  return false; case  210:  return false; case  211:  return false; case  214:  return false; case  215:  return false; case  216:  return false; case  217:  return false; case  218:  return false; case  220:  return false; case  221:  return false; case  223:  return false; case  226:  return false; case  227:  return false; case  228:  return false; case  230:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  234:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  240:  return false; case  242:  return false; case  245:  return false; case  247:  return false; case  248:  return false; case  252:  return false; case  253:  return false; case  254:  return false; case  257:  return false; case  258:  return false; case  260:  return false; case  262:  return false; case  264:  return false; case  265:  return false; case  266:  return false; case  272:  return false; case  273:  return false; case  274:  return false; case  276:  return false; case  280:  return false; case  283:  return false; case  286:  return false; case  288:  return false; case  291:  return false; case  294:  return false; case  295:  return false; case  298:  return false; case  299:  return false; case  301:  return false; case  303:  return false; case  304:  return false; case  305:  return false; case  307:  return false; case  308:  return false; case  309:  return false; case  311:  return false; case  312:  return false; case  313:  return false; case  314:  return false; case  316:  return false; case  317:  return false; case  318:  return false; case  320:  return false; case  322:  return false; case  331:  return false; case  333:  return false; case  334:  return false; case  335:  return false; case  336:  return false; case  337:  return false; case  338:  return false; case  343:  return false; case  344:  return false; case  346:
    return false;}
    tmp = getLeftModSubIn1Numbers(349,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  46:  return false; case  47:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  68:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  87:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  116:  return false; case  117:  return false; case  119:  return false; case  120:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  169:  return false; case  170:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  179:  return false; case  180:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  214:  return false; case  215:  return false; case  216:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  222:  return false; case  225:  return false; case  226:  return false; case  227:  return false; case  229:  return false; case  230:  return false; case  232:  return false; case  233:  return false; case  235:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  240:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  244:  return false; case  245:  return false; case  246:  return false; case  247:  return false; case  248:  return false; case  250:  return false; case  251:  return false; case  252:  return false; case  253:  return false; case  254:  return false; case  255:  return false; case  256:  return false; case  258:  return false; case  259:  return false; case  260:  return false; case  262:  return false; case  264:  return false; case  265:  return false; case  266:  return false; case  267:  return false; case  268:  return false; case  270:  return false; case  271:  return false; case  272:  return false; case  273:  return false; case  275:  return false; case  276:  return false; case  277:  return false; case  278:  return false; case  279:  return false; case  281:  return false; case  284:  return false; case  286:  return false; case  287:  return false; case  288:  return false; case  290:  return false; case  291:  return false; case  292:  return false; case  293:  return false; case  294:  return false; case  295:  return false; case  296:  return false; case  297:  return false; case  298:  return false; case  299:  return false; case  300:  return false; case  302:  return false; case  303:  return false; case  305:  return false; case  306:  return false; case  307:  return false; case  309:  return false; case  310:  return false; case  311:  return false; case  314:  return false; case  315:  return false; case  316:  return false; case  317:  return false; case  319:  return false; case  320:  return false; case  321:  return false; case  323:  return false; case  324:  return false; case  325:  return false; case  326:  return false; case  327:  return false; case  328:  return false; case  329:  return false; case  330:  return false; case  331:  return false; case  333:  return false; case  334:  return false; case  335:  return false; case  336:  return false; case  337:  return false; case  338:  return false; case  339:  return false; case  340:  return false; case  341:  return false; case  342:  return false; case  343:  return false; case  344:  return false; case  345:  return false; case  346:  return false; case  347:
    return false;}
    tmp = getLeftModSubIn1Numbers(353,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  10:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  20:  return false; case  24:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  31:  return false; case  33:  return false; case  37:  return false; case  40:  return false; case  45:  return false; case  48:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  59:  return false; case  62:  return false; case  63:  return false; case  66:  return false; case  67:  return false; case  69:  return false; case  71:  return false; case  74:  return false; case  75:  return false; case  77:  return false; case  79:  return false; case  80:  return false; case  85:  return false; case  87:  return false; case  89:  return false; case  90:  return false; case  95:  return false; case  96:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  110:  return false; case  112:  return false; case  114:  return false; case  115:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  123:  return false; case  124:  return false; case  125:  return false; case  126:  return false; case  129:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  145:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  154:  return false; case  158:  return false; case  160:  return false; case  161:  return false; case  163:  return false; case  170:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  183:  return false; case  190:  return false; case  192:  return false; case  193:  return false; case  195:  return false; case  199:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  208:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  214:  return false; case  215:  return false; case  216:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  224:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  230:  return false; case  234:  return false; case  235:  return false; case  236:  return false; case  238:  return false; case  239:  return false; case  241:  return false; case  243:  return false; case  245:  return false; case  246:  return false; case  247:  return false; case  248:  return false; case  249:  return false; case  250:  return false; case  251:  return false; case  252:  return false; case  257:  return false; case  258:  return false; case  263:  return false; case  264:  return false; case  266:  return false; case  268:  return false; case  273:  return false; case  274:  return false; case  276:  return false; case  278:  return false; case  279:  return false; case  282:  return false; case  284:  return false; case  286:  return false; case  287:  return false; case  290:  return false; case  291:  return false; case  294:  return false; case  296:  return false; case  297:  return false; case  298:  return false; case  299:  return false; case  300:  return false; case  301:  return false; case  302:  return false; case  305:  return false; case  308:  return false; case  313:  return false; case  316:  return false; case  320:  return false; case  322:  return false; case  325:  return false; case  326:  return false; case  327:  return false; case  329:  return false; case  333:  return false; case  339:  return false; case  340:  return false; case  341:  return false; case  343:  return false; case  346:  return false; case  347:  return false; case  348:  return false; case  350:
    return false;}
    tmp = getLeftModSubIn1Numbers(359,a,b,c,d,e);
    switch(tmp){  case 7:  return false; case  13:  return false; case  14:  return false; case  19:  return false; case  21:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  31:  return false; case  35:  return false; case  38:  return false; case  39:  return false; case  42:  return false; case  43:  return false; case  52:  return false; case  53:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  67:  return false; case  70:  return false; case  71:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  83:  return false; case  84:  return false; case  86:  return false; case  87:  return false; case  89:  return false; case  93:  return false; case  95:  return false; case  97:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  109:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  122:  return false; case  124:  return false; case  126:  return false; case  129:  return false; case  130:  return false; case  134:  return false; case  137:  return false; case  139:  return false; case  140:  return false; case  142:  return false; case  143:  return false; case  145:  return false; case  152:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  159:  return false; case  161:  return false; case  163:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  171:  return false; case  172:  return false; case  174:  return false; case  175:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  183:  return false; case  186:  return false; case  189:  return false; case  190:  return false; case  194:  return false; case  195:  return false; case  197:  return false; case  199:  return false; case  201:  return false; case  206:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  215:  return false; case  218:  return false; case  221:  return false; case  223:  return false; case  224:  return false; case  226:  return false; case  227:  return false; case  228:  return false; case  231:  return false; case  232:  return false; case  234:  return false; case  236:  return false; case  238:  return false; case  239:  return false; case  244:  return false; case  248:  return false; case  249:  return false; case  251:  return false; case  252:  return false; case  257:  return false; case  258:  return false; case  259:  return false; case  260:  return false; case  261:  return false; case  263:  return false; case  265:  return false; case  267:  return false; case  268:  return false; case  269:  return false; case  271:  return false; case  274:  return false; case  277:  return false; case  278:  return false; case  279:  return false; case  280:  return false; case  284:  return false; case  285:  return false; case  286:  return false; case  287:  return false; case  290:  return false; case  291:  return false; case  293:  return false; case  295:  return false; case  299:  return false; case  304:  return false; case  305:  return false; case  308:  return false; case  309:  return false; case  310:  return false; case  311:  return false; case  312:  return false; case  313:  return false; case  314:  return false; case  315:  return false; case  318:  return false; case  319:  return false; case  322:  return false; case  323:  return false; case  325:  return false; case  326:  return false; case  327:  return false; case  329:  return false; case  332:  return false; case  334:  return false; case  335:  return false; case  336:  return false; case  337:  return false; case  339:  return false; case  341:  return false; case  342:  return false; case  343:  return false; case  344:  return false; case  347:  return false; case  348:  return false; case  349:  return false; case  350:  return false; case  351:  return false; case  353:  return false; case  354:  return false; case  355:  return false; case  356:  return false; case  357:  return false; case  358:
    return false;}
    tmp = getLeftModSubIn1Numbers(367,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  48:  return false; case  50:  return false; case  51:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  57:  return false; case  58:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  73:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  100:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  121:  return false; case  123:  return false; case  125:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  133:  return false; case  136:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  144:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  169:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  176:  return false; case  177:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  210:  return false; case  212:  return false; case  213:  return false; case  214:  return false; case  215:  return false; case  216:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  227:  return false; case  228:  return false; case  230:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  234:  return false; case  235:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  240:  return false; case  241:  return false; case  243:  return false; case  244:  return false; case  245:  return false; case  246:  return false; case  247:  return false; case  248:  return false; case  249:  return false; case  250:  return false; case  251:  return false; case  252:  return false; case  253:  return false; case  254:  return false; case  255:  return false; case  256:  return false; case  257:  return false; case  259:  return false; case  260:  return false; case  261:  return false; case  262:  return false; case  263:  return false; case  264:  return false; case  265:  return false; case  266:  return false; case  267:  return false; case  268:  return false; case  269:  return false; case  270:  return false; case  271:  return false; case  272:  return false; case  273:  return false; case  274:  return false; case  275:  return false; case  276:  return false; case  277:  return false; case  278:  return false; case  279:  return false; case  280:  return false; case  282:  return false; case  283:  return false; case  284:  return false; case  285:  return false; case  286:  return false; case  287:  return false; case  288:  return false; case  289:  return false; case  290:  return false; case  291:  return false; case  293:  return false; case  294:  return false; case  295:  return false; case  296:  return false; case  297:  return false; case  298:  return false; case  300:  return false; case  301:  return false; case  302:  return false; case  303:  return false; case  304:  return false; case  305:  return false; case  306:  return false; case  307:  return false; case  308:  return false; case  309:  return false; case  310:  return false; case  311:  return false; case  312:  return false; case  313:  return false; case  314:  return false; case  315:  return false; case  316:  return false; case  317:  return false; case  318:  return false; case  319:  return false; case  320:  return false; case  321:  return false; case  324:  return false; case  325:  return false; case  326:  return false; case  328:  return false; case  330:  return false; case  331:  return false; case  333:  return false; case  334:  return false; case  335:  return false; case  336:  return false; case  337:  return false; case  339:  return false; case  341:  return false; case  342:  return false; case  344:  return false; case  345:  return false; case  347:  return false; case  348:  return false; case  349:  return false; case  350:  return false; case  351:  return false; case  352:  return false; case  353:  return false; case  354:  return false; case  355:  return false; case  356:  return false; case  357:  return false; case  358:  return false; case  359:  return false; case  360:  return false; case  361:  return false; case  363:  return false; case  365:  return false; case  366:
    return false;}
    tmp = getLeftModSubIn1Numbers(373,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  85:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  110:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  120:  return false; case  121:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  125:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  153:  return false; case  155:  return false; case  157:  return false; case  159:  return false; case  161:  return false; case  162:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  211:  return false; case  212:  return false; case  214:  return false; case  216:  return false; case  218:  return false; case  220:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  225:  return false; case  226:  return false; case  227:  return false; case  228:  return false; case  230:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  234:  return false; case  235:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  240:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  244:  return false; case  245:  return false; case  246:  return false; case  247:  return false; case  248:  return false; case  249:  return false; case  250:  return false; case  251:  return false; case  252:  return false; case  253:  return false; case  255:  return false; case  256:  return false; case  257:  return false; case  258:  return false; case  259:  return false; case  260:  return false; case  261:  return false; case  263:  return false; case  265:  return false; case  266:  return false; case  267:  return false; case  268:  return false; case  269:  return false; case  270:  return false; case  271:  return false; case  272:  return false; case  273:  return false; case  274:  return false; case  275:  return false; case  276:  return false; case  277:  return false; case  278:  return false; case  279:  return false; case  280:  return false; case  281:  return false; case  283:  return false; case  284:  return false; case  285:  return false; case  288:  return false; case  290:  return false; case  291:  return false; case  292:  return false; case  293:  return false; case  294:  return false; case  295:  return false; case  296:  return false; case  297:  return false; case  299:  return false; case  300:  return false; case  301:  return false; case  302:  return false; case  303:  return false; case  304:  return false; case  305:  return false; case  306:  return false; case  307:  return false; case  308:  return false; case  310:  return false; case  311:  return false; case  312:  return false; case  313:  return false; case  314:  return false; case  315:  return false; case  316:  return false; case  317:  return false; case  319:  return false; case  320:  return false; case  321:  return false; case  322:  return false; case  323:  return false; case  325:  return false; case  326:  return false; case  327:  return false; case  328:  return false; case  329:  return false; case  330:  return false; case  331:  return false; case  333:  return false; case  334:  return false; case  335:  return false; case  336:  return false; case  337:  return false; case  338:  return false; case  339:  return false; case  340:  return false; case  341:  return false; case  344:  return false; case  345:  return false; case  347:  return false; case  348:  return false; case  349:  return false; case  350:  return false; case  352:  return false; case  353:  return false; case  354:  return false; case  355:  return false; case  357:  return false; case  358:  return false; case  359:  return false; case  362:  return false; case  363:  return false; case  364:  return false; case  365:  return false; case  367:  return false; case  368:  return false; case  369:  return false; case  370:  return false; case  371:
    return false;}
    tmp = getLeftModSubIn1Numbers(379,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  7:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  24:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  31:  return false; case  32:  return false; case  34:  return false; case  35:  return false; case  38:  return false; case  40:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  68:  return false; case  69:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  85:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  92:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  120:  return false; case  121:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  140:  return false; case  141:  return false; case  143:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  166:  return false; case  168:  return false; case  169:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  197:  return false; case  199:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  214:  return false; case  215:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  223:  return false; case  224:  return false; case  225:  return false; case  226:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  230:  return false; case  231:  return false; case  233:  return false; case  235:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  240:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  245:  return false; case  247:  return false; case  248:  return false; case  249:  return false; case  250:  return false; case  251:  return false; case  252:  return false; case  253:  return false; case  254:  return false; case  256:  return false; case  257:  return false; case  258:  return false; case  259:  return false; case  260:  return false; case  261:  return false; case  262:  return false; case  263:  return false; case  264:  return false; case  265:  return false; case  266:  return false; case  268:  return false; case  269:  return false; case  270:  return false; case  271:  return false; case  272:  return false; case  273:  return false; case  274:  return false; case  275:  return false; case  276:  return false; case  277:  return false; case  278:  return false; case  279:  return false; case  280:  return false; case  281:  return false; case  282:  return false; case  283:  return false; case  284:  return false; case  285:  return false; case  286:  return false; case  287:  return false; case  288:  return false; case  289:  return false; case  290:  return false; case  291:  return false; case  292:  return false; case  293:  return false; case  294:  return false; case  295:  return false; case  296:  return false; case  297:  return false; case  298:  return false; case  299:  return false; case  300:  return false; case  301:  return false; case  302:  return false; case  303:  return false; case  304:  return false; case  305:  return false; case  307:  return false; case  308:  return false; case  309:  return false; case  310:  return false; case  312:  return false; case  313:  return false; case  314:  return false; case  315:  return false; case  317:  return false; case  318:  return false; case  319:  return false; case  321:  return false; case  323:  return false; case  324:  return false; case  325:  return false; case  326:  return false; case  328:  return false; case  329:  return false; case  330:  return false; case  332:  return false; case  333:  return false; case  334:  return false; case  336:  return false; case  337:  return false; case  338:  return false; case  340:  return false; case  341:  return false; case  342:  return false; case  343:  return false; case  344:  return false; case  345:  return false; case  346:  return false; case  347:  return false; case  348:  return false; case  349:  return false; case  351:  return false; case  353:  return false; case  354:  return false; case  355:  return false; case  356:  return false; case  357:  return false; case  358:  return false; case  359:  return false; case  360:  return false; case  361:  return false; case  362:  return false; case  363:  return false; case  364:  return false; case  365:  return false; case  366:  return false; case  367:  return false; case  368:  return false; case  369:  return false; case  370:  return false; case  372:  return false; case  373:  return false; case  374:  return false; case  375:  return false; case  376:  return false; case  377:  return false; case  378:
    return false;}
    tmp = getLeftModSubIn1Numbers(383,a,b,c,d,e);
    switch(tmp){  case 5:  return false; case  10:  return false; case  11:  return false; case  13:  return false; case  15:  return false; case  20:  return false; case  22:  return false; case  26:  return false; case  30:  return false; case  33:  return false; case  35:  return false; case  37:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  44:  return false; case  45:  return false; case  47:  return false; case  52:  return false; case  53:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  66:  return false; case  70:  return false; case  74:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  82:  return false; case  83:  return false; case  85:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  94:  return false; case  95:  return false; case  97:  return false; case  99:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  109:  return false; case  111:  return false; case  115:  return false; case  117:  return false; case  118:  return false; case  120:  return false; case  122:  return false; case  123:  return false; case  125:  return false; case  127:  return false; case  131:  return false; case  132:  return false; case  135:  return false; case  140:  return false; case  141:  return false; case  145:  return false; case  148:  return false; case  151:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  163:  return false; case  164:  return false; case  166:  return false; case  167:  return false; case  170:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  187:  return false; case  188:  return false; case  190:  return false; case  191:  return false; case  194:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  214:  return false; case  215:  return false; case  218:  return false; case  221:  return false; case  222:  return false; case  230:  return false; case  231:  return false; case  233:  return false; case  234:  return false; case  236:  return false; case  237:  return false; case  239:  return false; case  240:  return false; case  241:  return false; case  244:  return false; case  245:  return false; case  246:  return false; case  247:  return false; case  249:  return false; case  250:  return false; case  253:  return false; case  254:  return false; case  255:  return false; case  257:  return false; case  259:  return false; case  262:  return false; case  264:  return false; case  267:  return false; case  269:  return false; case  270:  return false; case  271:  return false; case  273:  return false; case  275:  return false; case  280:  return false; case  281:  return false; case  282:  return false; case  283:  return false; case  285:  return false; case  287:  return false; case  290:  return false; case  291:  return false; case  296:  return false; case  297:  return false; case  299:  return false; case  302:  return false; case  307:  return false; case  308:  return false; case  310:  return false; case  311:  return false; case  312:  return false; case  314:  return false; case  315:  return false; case  316:  return false; case  318:  return false; case  319:  return false; case  320:  return false; case  321:  return false; case  325:  return false; case  326:  return false; case  327:  return false; case  328:  return false; case  329:  return false; case  332:  return false; case  333:  return false; case  334:  return false; case  335:  return false; case  337:  return false; case  340:  return false; case  341:  return false; case  345:  return false; case  347:  return false; case  349:  return false; case  351:  return false; case  352:  return false; case  354:  return false; case  355:  return false; case  356:  return false; case  358:  return false; case  359:  return false; case  360:  return false; case  362:  return false; case  364:  return false; case  365:  return false; case  366:  return false; case  367:  return false; case  369:  return false; case  371:  return false; case  374:  return false; case  375:  return false; case  376:  return false; case  377:  return false; case  379:  return false; case  380:  return false; case  381:  return false; case  382:
    return false;}
    tmp = getLeftModSubIn1Numbers(389,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  8:  return false; case  10:  return false; case  12:  return false; case  14:  return false; case  15:  return false; case  18:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  26:  return false; case  27:  return false; case  29:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  43:  return false; case  47:  return false; case  48:  return false; case  50:  return false; case  51:  return false; case  53:  return false; case  56:  return false; case  57:  return false; case  60:  return false; case  61:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  75:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  92:  return false; case  98:  return false; case  101:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  115:  return false; case  116:  return false; case  118:  return false; case  123:  return false; case  124:  return false; case  126:  return false; case  128:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  138:  return false; case  139:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  151:  return false; case  152:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  158:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  165:  return false; case  167:  return false; case  170:  return false; case  172:  return false; case  174:  return false; case  177:  return false; case  182:  return false; case  185:  return false; case  186:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  194:  return false; case  195:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  200:  return false; case  201:  return false; case  203:  return false; case  204:  return false; case  207:  return false; case  212:  return false; case  215:  return false; case  217:  return false; case  219:  return false; case  222:  return false; case  224:  return false; case  226:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  231:  return false; case  233:  return false; case  234:  return false; case  235:  return false; case  237:  return false; case  238:  return false; case  240:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  244:  return false; case  250:  return false; case  251:  return false; case  253:  return false; case  254:  return false; case  255:  return false; case  257:  return false; case  258:  return false; case  259:  return false; case  261:  return false; case  263:  return false; case  265:  return false; case  266:  return false; case  271:  return false; case  273:  return false; case  274:  return false; case  279:  return false; case  280:  return false; case  281:  return false; case  282:  return false; case  284:  return false; case  285:  return false; case  286:  return false; case  288:  return false; case  291:  return false; case  297:  return false; case  299:  return false; case  300:  return false; case  301:  return false; case  305:  return false; case  306:  return false; case  307:  return false; case  314:  return false; case  317:  return false; case  318:  return false; case  319:  return false; case  328:  return false; case  329:  return false; case  332:  return false; case  333:  return false; case  336:  return false; case  338:  return false; case  339:  return false; case  341:  return false; case  342:  return false; case  346:  return false; case  349:  return false; case  350:  return false; case  351:  return false; case  352:
    return false;}
    tmp = getLeftModSubIn1Numbers(397,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  32:  return false; case  33:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  109:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  121:  return false; case  122:  return false; case  123:  return false; case  125:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  138:  return false; case  139:  return false; case  143:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  168:  return false; case  169:  return false; case  170:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  205:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  214:  return false; case  215:  return false; case  216:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  235:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  240:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  244:  return false; case  245:  return false; case  247:  return false; case  248:  return false; case  249:  return false; case  251:  return false; case  252:  return false; case  253:  return false; case  254:  return false; case  258:  return false; case  259:  return false; case  262:  return false; case  263:  return false; case  264:  return false; case  265:  return false; case  266:  return false; case  267:  return false; case  268:  return false; case  269:  return false; case  270:  return false; case  272:  return false; case  274:  return false; case  275:  return false; case  276:  return false; case  278:  return false; case  279:  return false; case  280:  return false; case  281:  return false; case  282:  return false; case  283:  return false; case  284:  return false; case  285:  return false; case  286:  return false; case  288:  return false; case  292:  return false; case  293:  return false; case  294:  return false; case  295:  return false; case  296:  return false; case  297:  return false; case  299:  return false; case  300:  return false; case  301:  return false; case  302:  return false; case  303:  return false; case  304:  return false; case  305:  return false; case  306:  return false; case  307:  return false; case  308:  return false; case  309:  return false; case  310:  return false; case  311:  return false; case  312:  return false; case  313:  return false; case  315:  return false; case  316:  return false; case  317:  return false; case  318:  return false; case  319:  return false; case  320:  return false; case  321:  return false; case  322:  return false; case  323:  return false; case  324:  return false; case  325:  return false; case  326:  return false; case  327:  return false; case  328:  return false; case  329:  return false; case  330:  return false; case  331:  return false; case  334:  return false; case  335:  return false; case  336:  return false; case  337:  return false; case  338:  return false; case  339:  return false; case  340:  return false; case  341:  return false; case  342:  return false; case  343:  return false; case  344:  return false; case  345:  return false; case  346:  return false; case  347:  return false; case  348:  return false; case  349:  return false; case  350:  return false; case  351:  return false; case  352:  return false; case  353:  return false; case  355:  return false; case  356:  return false; case  357:  return false; case  358:  return false; case  359:  return false; case  360:  return false; case  361:  return false; case  364:  return false; case  365:  return false; case  368:  return false; case  369:  return false; case  371:  return false; case  372:  return false; case  373:  return false; case  374:  return false; case  375:  return false; case  376:  return false; case  377:  return false; case  378:  return false; case  379:  return false; case  380:  return false; case  382:  return false; case  383:  return false; case  384:  return false; case  385:  return false; case  386:  return false; case  387:  return false; case  388:  return false; case  389:  return false; case  390:  return false; case  391:  return false; case  392:  return false; case  394:  return false; case  395:
    return false;}
    tmp = getLeftModSubIn1Numbers(409,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  7:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  49:  return false; case  50:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  90:  return false; case  91:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  104:  return false; case  105:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  148:  return false; case  149:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  181:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  194:  return false; case  195:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  214:  return false; case  215:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  225:  return false; case  226:  return false; case  228:  return false; case  230:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  234:  return false; case  235:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  244:  return false; case  245:  return false; case  246:  return false; case  248:  return false; case  249:  return false; case  250:  return false; case  251:  return false; case  252:  return false; case  253:  return false; case  254:  return false; case  256:  return false; case  257:  return false; case  258:  return false; case  260:  return false; case  261:  return false; case  263:  return false; case  264:  return false; case  265:  return false; case  267:  return false; case  268:  return false; case  269:  return false; case  270:  return false; case  271:  return false; case  272:  return false; case  273:  return false; case  275:  return false; case  276:  return false; case  277:  return false; case  278:  return false; case  279:  return false; case  280:  return false; case  281:  return false; case  282:  return false; case  283:  return false; case  285:  return false; case  286:  return false; case  287:  return false; case  289:  return false; case  290:  return false; case  291:  return false; case  292:  return false; case  293:  return false; case  294:  return false; case  295:  return false; case  296:  return false; case  297:  return false; case  298:  return false; case  299:  return false; case  300:  return false; case  301:  return false; case  302:  return false; case  304:  return false; case  305:  return false; case  307:  return false; case  308:  return false; case  309:  return false; case  310:  return false; case  311:  return false; case  312:  return false; case  313:  return false; case  314:  return false; case  315:  return false; case  316:  return false; case  318:  return false; case  319:  return false; case  321:  return false; case  322:  return false; case  323:  return false; case  324:  return false; case  325:  return false; case  328:  return false; case  329:  return false; case  330:  return false; case  331:  return false; case  332:  return false; case  333:  return false; case  334:  return false; case  335:  return false; case  336:  return false; case  337:  return false; case  338:  return false; case  339:  return false; case  342:  return false; case  343:  return false; case  344:  return false; case  346:  return false; case  347:  return false; case  348:  return false; case  349:  return false; case  350:  return false; case  351:  return false; case  352:  return false; case  353:  return false; case  354:  return false; case  355:  return false; case  356:  return false; case  357:  return false; case  359:  return false; case  360:  return false; case  362:  return false; case  363:  return false; case  364:  return false; case  365:  return false; case  366:  return false; case  367:  return false; case  368:  return false; case  370:  return false; case  371:  return false; case  372:  return false; case  374:  return false; case  375:  return false; case  376:  return false; case  377:  return false; case  378:  return false; case  380:  return false; case  381:  return false; case  383:  return false; case  385:  return false; case  386:  return false; case  387:  return false; case  388:  return false; case  389:  return false; case  390:  return false; case  391:  return false; case  392:  return false; case  393:  return false; case  394:  return false; case  395:  return false; case  396:  return false; case  397:  return false; case  398:  return false; case  399:  return false; case  400:  return false; case  402:  return false; case  405:  return false; case  406:  return false; case  407:
    return false;}
    tmp = getLeftModSubIn1Numbers(421,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  8:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  34:  return false; case  35:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  46:  return false; case  47:  return false; case  50:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  76:  return false; case  77:  return false; case  79:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  105:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  121:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  140:  return false; case  141:  return false; case  143:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  214:  return false; case  215:  return false; case  216:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  223:  return false; case  224:  return false; case  225:  return false; case  226:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  230:  return false; case  233:  return false; case  234:  return false; case  235:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  240:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  244:  return false; case  245:  return false; case  246:  return false; case  248:  return false; case  249:  return false; case  250:  return false; case  251:  return false; case  253:  return false; case  254:  return false; case  255:  return false; case  256:  return false; case  257:  return false; case  258:  return false; case  259:  return false; case  260:  return false; case  261:  return false; case  262:  return false; case  263:  return false; case  264:  return false; case  265:  return false; case  266:  return false; case  267:  return false; case  268:  return false; case  270:  return false; case  271:  return false; case  272:  return false; case  273:  return false; case  274:  return false; case  275:  return false; case  276:  return false; case  277:  return false; case  278:  return false; case  280:  return false; case  281:  return false; case  283:  return false; case  284:  return false; case  285:  return false; case  286:  return false; case  287:  return false; case  288:  return false; case  289:  return false; case  292:  return false; case  293:  return false; case  294:  return false; case  295:  return false; case  297:  return false; case  298:  return false; case  299:  return false; case  300:  return false; case  301:  return false; case  302:  return false; case  303:  return false; case  304:  return false; case  305:  return false; case  306:  return false; case  309:  return false; case  310:  return false; case  311:  return false; case  312:  return false; case  313:  return false; case  314:  return false; case  316:  return false; case  318:  return false; case  319:  return false; case  320:  return false; case  322:  return false; case  323:  return false; case  324:  return false; case  325:  return false; case  326:  return false; case  327:  return false; case  328:  return false; case  329:  return false; case  330:  return false; case  331:  return false; case  332:  return false; case  333:  return false; case  334:  return false; case  335:  return false; case  337:  return false; case  338:  return false; case  339:  return false; case  340:  return false; case  342:  return false; case  344:  return false; case  345:  return false; case  347:  return false; case  348:  return false; case  349:  return false; case  350:  return false; case  351:  return false; case  352:  return false; case  355:  return false; case  356:  return false; case  358:  return false; case  359:  return false; case  360:  return false; case  362:  return false; case  363:  return false; case  364:  return false; case  365:  return false; case  367:  return false; case  368:  return false; case  369:  return false; case  371:  return false; case  374:  return false; case  375:  return false; case  378:  return false; case  379:  return false; case  380:  return false; case  381:  return false; case  382:  return false; case  383:  return false; case  384:  return false; case  386:  return false; case  387:  return false; case  389:  return false; case  390:  return false; case  391:  return false; case  392:  return false; case  393:  return false; case  395:  return false; case  396:  return false; case  397:  return false; case  398:  return false; case  399:  return false; case  400:  return false; case  401:  return false; case  402:  return false; case  403:  return false; case  404:  return false; case  405:  return false; case  406:  return false; case  407:  return false; case  408:  return false; case  409:  return false; case  410:  return false; case  411:  return false; case  412:  return false; case  413:  return false; case  415:  return false; case  416:  return false; case  417:  return false; case  418:  return false; case  419:
    return false;}
    tmp = getLeftModSubIn1Numbers(433,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  17:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  33:  return false; case  34:  return false; case  36:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  109:  return false; case  110:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  116:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  121:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  125:  return false; case  126:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  138:  return false; case  139:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  149:  return false; case  151:  return false; case  152:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  168:  return false; case  169:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  178:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  214:  return false; case  215:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  225:  return false; case  226:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  240:  return false; case  241:  return false; case  242:  return false; case  243:  return false; case  244:  return false; case  245:  return false; case  246:  return false; case  247:  return false; case  248:  return false; case  249:  return false; case  250:  return false; case  251:  return false; case  252:  return false; case  253:  return false; case  255:  return false; case  257:  return false; case  258:  return false; case  259:  return false; case  260:  return false; case  261:  return false; case  262:  return false; case  263:  return false; case  264:  return false; case  265:  return false; case  267:  return false; case  268:  return false; case  269:  return false; case  270:  return false; case  271:  return false; case  272:  return false; case  273:  return false; case  276:  return false; case  277:  return false; case  278:  return false; case  279:  return false; case  281:  return false; case  282:  return false; case  284:  return false; case  286:  return false; case  287:  return false; case  288:  return false; case  289:  return false; case  290:  return false; case  291:  return false; case  292:  return false; case  294:  return false; case  295:  return false; case  297:  return false; case  298:  return false; case  299:  return false; case  301:  return false; case  302:  return false; case  303:  return false; case  304:  return false; case  307:  return false; case  308:  return false; case  309:  return false; case  310:  return false; case  311:  return false; case  312:  return false; case  313:  return false; case  314:  return false; case  315:  return false; case  317:  return false; case  319:  return false; case  320:  return false; case  321:  return false; case  322:  return false; case  323:  return false; case  324:  return false; case  326:  return false; case  327:  return false; case  328:  return false; case  329:  return false; case  330:  return false; case  331:  return false; case  332:  return false; case  333:  return false; case  335:  return false; case  336:  return false; case  337:  return false; case  338:  return false; case  339:  return false; case  340:  return false; case  341:  return false; case  342:  return false; case  343:  return false; case  344:  return false; case  345:  return false; case  346:  return false; case  347:  return false; case  348:  return false; case  349:  return false; case  350:  return false; case  351:  return false; case  352:  return false; case  353:  return false; case  355:  return false; case  356:  return false; case  357:  return false; case  360:  return false; case  361:  return false; case  362:  return false; case  364:  return false; case  365:  return false; case  366:  return false; case  367:  return false; case  368:  return false; case  370:  return false; case  371:  return false; case  372:  return false; case  373:  return false; case  374:  return false; case  375:  return false; case  376:  return false; case  377:  return false; case  378:  return false; case  380:  return false; case  381:  return false; case  382:  return false; case  383:  return false; case  384:  return false; case  385:  return false; case  386:  return false; case  387:  return false; case  388:  return false; case  389:  return false; case  390:  return false; case  391:  return false; case  392:  return false; case  393:  return false; case  394:  return false; case  395:  return false; case  397:  return false; case  399:  return false; case  400:  return false; case  402:  return false; case  403:  return false; case  404:  return false; case  405:  return false; case  407:  return false; case  408:  return false; case  409:  return false; case  410:  return false; case  411:  return false; case  412:  return false; case  413:  return false; case  414:  return false; case  415:  return false; case  416:  return false; case  418:  return false; case  419:  return false; case  420:  return false; case  421:  return false; case  422:  return false; case  423:  return false; case  424:  return false; case  426:  return false; case  427:  return false; case  428:  return false; case  430:
    return false;}
    tmp = getLeftModSubIn1Numbers(439,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  5:  return false; case  6:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  15:  return false; case  17:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  27:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  33:  return false; case  34:  return false; case  35:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  62:  return false; case  66:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  82:  return false; case  83:  return false; case  84:  return false; case  85:  return false; case  86:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  99:  return false; case  100:  return false; case  101:  return false; case  102:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  111:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  121:  return false; case  123:  return false; case  124:  return false; case  127:  return false; case  129:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  136:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  142:  return false; case  143:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  169:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  205:  return false; case  207:  return false; case  208:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  214:  return false; case  215:  return false; case  216:  return false; case  217:  return false; case  219:  return false; case  221:
    return false;}
    tmp = getLeftModSubIn1Numbers(457,a,b,c,d,e);
    switch(tmp){  case 3:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  18:  return false; case  19:  return false; case  20:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  33:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  49:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  56:  return false; case  58:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  66:  return false; case  67:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  85:  return false; case  86:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  97:  return false; case  98:  return false; case  99:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  111:  return false; case  112:  return false; case  113:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  118:  return false; case  119:  return false; case  120:  return false; case  122:  return false; case  123:  return false; case  124:  return false; case  125:  return false; case  126:  return false; case  127:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  134:  return false; case  135:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  144:  return false; case  145:  return false; case  146:  return false; case  147:  return false; case  148:  return false; case  149:  return false; case  150:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  158:  return false; case  159:  return false; case  160:  return false; case  161:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  169:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  189:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  209:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  214:  return false; case  217:  return false; case  219:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  225:  return false; case  226:  return false; case  227:  return false; case  230:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  234:  return false; case  235:  return false; case  236:  return false; case  238:  return false; case  240:  return false; case  243:  return false; case  244:  return false; case  245:  return false; case  246:  return false; case  247:  return false; case  248:  return false; case  249:  return false; case  250:  return false; case  251:  return false; case  252:  return false; case  253:  return false; case  254:  return false; case  255:  return false; case  258:  return false; case  259:  return false; case  260:  return false; case  261:  return false; case  262:  return false; case  263:  return false; case  264:  return false; case  265:  return false; case  266:  return false; case  267:  return false; case  268:  return false; case  269:  return false; case  270:  return false; case  271:  return false; case  273:  return false; case  274:  return false; case  275:  return false; case  276:  return false; case  277:  return false; case  278:  return false; case  279:  return false; case  280:  return false; case  281:  return false; case  282:  return false; case  284:  return false; case  285:  return false; case  286:  return false; case  287:  return false; case  288:  return false; case  290:  return false; case  291:  return false; case  292:  return false; case  293:  return false; case  294:  return false; case  295:  return false; case  296:  return false; case  297:  return false; case  298:  return false; case  299:  return false; case  300:  return false; case  301:  return false; case  302:  return false; case  303:  return false; case  304:  return false; case  305:  return false; case  306:  return false; case  307:  return false; case  308:  return false; case  309:  return false; case  310:  return false; case  311:  return false; case  312:  return false; case  313:  return false; case  314:  return false; case  315:  return false; case  316:  return false; case  317:  return false; case  318:  return false; case  319:  return false; case  320:  return false; case  322:  return false; case  323:  return false; case  324:  return false; case  325:  return false; case  326:  return false; case  327:  return false; case  328:  return false; case  330:  return false; case  331:  return false; case  332:  return false; case  333:  return false; case  334:  return false; case  335:  return false; case  337:  return false; case  338:  return false; case  339:  return false; case  340:  return false; case  341:  return false; case  342:  return false; case  344:  return false; case  345:  return false; case  346:  return false; case  350:  return false; case  351:  return false; case  352:  return false; case  353:  return false; case  354:  return false; case  355:  return false; case  356:  return false; case  358:  return false; case  359:  return false; case  360:  return false; case  361:  return false; case  362:  return false; case  363:  return false; case  364:  return false; case  365:  return false; case  366:  return false; case  367:  return false; case  368:  return false; case  369:  return false; case  371:  return false; case  372:  return false; case  374:  return false; case  375:  return false; case  376:  return false; case  377:  return false; case  378:  return false; case  379:  return false; case  380:  return false; case  381:  return false; case  382:  return false; case  383:  return false; case  384:  return false; case  385:  return false; case  386:  return false; case  387:  return false; case  388:  return false; case  390:  return false; case  391:  return false; case  392:  return false; case  394:  return false; case  395:  return false; case  396:  return false; case  397:  return false; case  398:  return false; case  399:  return false; case  401:  return false; case  404:  return false; case  405:  return false; case  406:  return false; case  408:  return false; case  409:  return false; case  410:  return false; case  411:  return false; case  412:  return false; case  413:  return false; case  414:  return false; case  416:  return false; case  417:  return false; case  418:  return false; case  419:  return false; case  420:  return false; case  421:  return false; case  422:  return false; case  424:  return false; case  426:  return false; case  427:  return false; case  428:  return false; case  429:  return false; case  431:  return false; case  433:  return false; case  434:  return false; case  435:  return false; case  437:  return false; case  438:  return false; case  439:  return false; case  442:  return false; case  443:  return false; case  444:  return false; case  445:  return false; case  446:  return false; case  447:  return false; case  448:  return false; case  450:  return false; case  451:  return false; case  452:  return false; case  454:
    return false;}
    tmp = getLeftModSubIn1Numbers(463,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  16:  return false; case  17:  return false; case  19:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  25:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  29:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  35:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  39:  return false; case  40:  return false; case  41:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  48:  return false; case  50:  return false; case  51:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  56:  return false; case  59:  return false; case  60:  return false; case  61:  return false; case  62:  return false; case  63:  return false; case  67:  return false; case  68:  return false; case  69:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  85:  return false; case  87:  return false; case  88:  return false; case  89:  return false; case  90:  return false; case  91:  return false; case  92:  return false; case  93:  return false; case  94:  return false; case  95:  return false; case  96:  return false; case  98:  return false; case  99:  return false; case  101:  return false; case  102:  return false; case  103:  return false; case  104:  return false; case  105:  return false; case  106:  return false; case  107:  return false; case  108:  return false; case  109:  return false; case  110:  return false; case  112:  return false; case  113:  return false; case  114:  return false; case  115:  return false; case  116:  return false; case  117:  return false; case  119:  return false; case  121:  return false; case  122:  return false; case  125:  return false; case  126:  return false; case  127:  return false; case  128:  return false; case  129:  return false; case  130:  return false; case  131:  return false; case  132:  return false; case  133:  return false; case  135:  return false; case  136:  return false; case  137:  return false; case  138:  return false; case  139:  return false; case  140:  return false; case  141:  return false; case  142:  return false; case  143:  return false; case  145:  return false; case  147:  return false; case  148:  return false; case  150:  return false; case  151:  return false; case  152:  return false; case  153:  return false; case  154:  return false; case  155:  return false; case  156:  return false; case  157:  return false; case  160:  return false; case  162:  return false; case  163:  return false; case  164:  return false; case  165:  return false; case  166:  return false; case  167:  return false; case  168:  return false; case  169:  return false; case  170:  return false; case  171:  return false; case  172:  return false; case  173:  return false; case  174:  return false; case  175:  return false; case  176:  return false; case  177:  return false; case  178:  return false; case  179:  return false; case  180:  return false; case  181:  return false; case  182:  return false; case  183:  return false; case  184:  return false; case  185:  return false; case  186:  return false; case  187:  return false; case  188:  return false; case  190:  return false; case  191:  return false; case  192:  return false; case  193:  return false; case  194:  return false; case  195:  return false; case  196:  return false; case  197:  return false; case  198:  return false; case  199:  return false; case  200:  return false; case  201:  return false; case  202:  return false; case  203:  return false; case  204:  return false; case  205:  return false; case  206:  return false; case  207:  return false; case  208:  return false; case  210:  return false; case  211:  return false; case  212:  return false; case  213:  return false; case  214:  return false; case  215:  return false; case  216:  return false; case  217:  return false; case  218:  return false; case  219:  return false; case  220:  return false; case  221:  return false; case  222:  return false; case  223:  return false; case  224:  return false; case  227:  return false; case  228:  return false; case  229:  return false; case  231:  return false; case  232:  return false; case  233:  return false; case  234:  return false; case  235:  return false; case  236:  return false; case  237:  return false; case  238:  return false; case  239:  return false; case  240:  return false; case  241:  return false; case  243:  return false; case  245:  return false; case  246:  return false; case  248:  return false; case  249:  return false; case  250:  return false; case  251:  return false; case  252:  return false; case  253:  return false; case  254:  return false; case  255:  return false; case  256:  return false; case  257:  return false; case  258:  return false; case  259:  return false; case  260:  return false; case  261:  return false; case  263:  return false; case  264:  return false; case  265:  return false; case  267:  return false; case  268:  return false; case  269:  return false; case  271:  return false; case  273:  return false; case  274:  return false; case  275:  return false; case  278:  return false; case  280:  return false; case  281:  return false; case  282:  return false; case  284:  return false; case  285:  return false; case  287:  return false; case  288:  return false; case  289:  return false; case  290:  return false; case  291:  return false; case  292:  return false; case  293:  return false; case  294:  return false; case  295:  return false; case  296:  return false; case  297:  return false; case  298:  return false; case  299:  return false; case  300:  return false; case  301:  return false; case  302:  return false; case  303:  return false; case  304:  return false; case  305:  return false; case  306:  return false; case  307:  return false; case  309:  return false; case  310:  return false; case  311:  return false; case  312:  return false; case  314:  return false; case  315:  return false; case  316:  return false; case  317:  return false; case  318:  return false; case  319:  return false; case  320:  return false; case  321:  return false; case  322:  return false; case  323:  return false; case  325:  return false; case  326:  return false; case  327:  return false; case  328:  return false; case  329:  return false; case  330:  return false; case  331:  return false; case  332:  return false; case  333:  return false; case  335:  return false; case  336:  return false; case  339:  return false; case  340:  return false; case  341:  return false; case  342:  return false; case  343:  return false; case  344:  return false; case  345:  return false; case  347:  return false; case  348:  return false; case  349:  return false; case  350:  return false; case  351:  return false; case  352:  return false; case  353:  return false; case  354:  return false; case  355:  return false; case  359:  return false; case  360:  return false; case  361:  return false; case  363:  return false; case  365:  return false; case  366:  return false; case  368:  return false; case  369:  return false; case  370:  return false; case  371:  return false; case  372:  return false; case  373:  return false; case  374:  return false; case  375:  return false; case  377:  return false; case  378:  return false; case  379:  return false; case  382:  return false; case  384:  return false; case  385:  return false; case  386:  return false; case  387:  return false; case  388:  return false; case  390:  return false; case  391:  return false; case  393:  return false; case  394:  return false; case  395:  return false; case  396:  return false; case  397:  return false; case  398:  return false; case  399:  return false; case  400:  return false; case  401:  return false; case  402:  return false; case  403:  return false; case  404:  return false; case  405:  return false; case  406:  return false; case  408:  return false; case  409:  return false; case  410:  return false; case  413:  return false; case  414:  return false; case  415:  return false; case  416:  return false; case  417:  return false; case  418:  return false; case  420:  return false; case  421:  return false; case  422:  return false; case  423:  return false; case  424:  return false; case  426:  return false; case  427:  return false; case  428:  return false; case  429:  return false; case  430:  return false; case  431:  return false; case  432:  return false; case  433:  return false; case  434:  return false; case  435:  return false; case  437:  return false; case  438:  return false; case  439:  return false; case  441:  return false; case  442:  return false; case  443:  return false; case  444:  return false; case  445:  return false; case  446:  return false; case  447:  return false; case  448:  return false; case  449:  return false; case  450:  return false; case  452:  return false; case  454:  return false; case  455:  return false; case  457:  return false; case  458:  return false; case  459:  return false; case  460:  return false; case  461:  return false; case  462:
    return false;}
    tmp = getLeftModSubIn1Numbers(487,a,b,c,d,e);
    switch(tmp){  case 2:  return false; case  3:  return false; case  4:  return false; case  5:  return false; case  6:  return false; case  7:  return false; case  9:  return false; case  10:  return false; case  11:  return false; case  12:  return false; case  13:  return false; case  14:  return false; case  15:  return false; case  16:  return false; case  17:  return false; case  20:  return false; case  21:  return false; case  22:  return false; case  23:  return false; case  24:  return false; case  26:  return false; case  27:  return false; case  28:  return false; case  30:  return false; case  31:  return false; case  32:  return false; case  33:  return false; case  34:  return false; case  36:  return false; case  37:  return false; case  38:  return false; case  40:  return false; case  42:  return false; case  43:  return false; case  44:  return false; case  45:  return false; case  46:  return false; case  47:  return false; case  48:  return false; case  50:  return false; case  52:  return false; case  53:  return false; case  54:  return false; case  55:  return false; case  56:  return false; case  57:  return false; case  58:  return false; case  59:  return false; case  62:  return false; case  63:  return false; case  65:  return false; case  68:  return false; case  69:  return false; case  70:  return false; case  71:  return false; case  72:  return false; case  73:  return false; case  74:  return false; case  75:  return false; case  76:  return false; case  77:  return false; case  78:  return false; case  79:  return false; case  80:  return false; case  81:  return false; case  82:  return false; case  83:  return false; case  85:
    return false;}
    
    
    return true;
}

int thread_function(int& lowerB, int& upperB, int& aInt, int threadNum){
    thread::id this_id = this_thread::get_id();
    //cout<<"start in thread " << this_id<<" funtion lower " <<lowerB << " upperB " << upperB <<endl;
    cout <<"start in thread " << this_id<<" threadNum "<<threadNum <<endl;
    
    //for(int bInt = lowerB; bInt < upperB; bInt++){

    bInt += threadNum;
    for(int bInt = lowerB; bInt < upperB;bInt += NUM_THREADS)
        int aPowerMod7 = (aInt % 7 == 0) ? 0 : 1;
        int bPowerMod7 = (bInt % 7 == 0) ? 0 : 1;
        // This if is a filter precalculated. The sum of 4 6th power mod 7 cannot make 6
        int aMinusbMod7 = aPowerMod7 - bPowerMod7;
        while (aMinusbMod7 < 0){
            aMinusbMod7 += 7;
        }

        //if (aMinusbMod7 == 6){
            //this if is commented out as aMinusbMod7 is 6 only if a mod 7 = 0, which has been previously eliminated 
        //    printf("return in b loop.\n");
        //    return;
        //}
        //printf("aInt: %d, bInt: %d, index: %d\n", aInt, bInt, index);
        int mod7SumBCDEF = bPowerMod7;
        int lowerC = (int)(getLowerC(aInt, bInt) + 0.5);    //round up
        int upperC = (int)getUpperC(aInt, bInt);            //round down. But don't need it explicity
        upperC = (upperC > bInt) ? bInt : upperC;

        //printf("%d\n",lowerB+index);
        //printf("aInt: %d, bInt: %d, index: %d", aInt, bInt, index);
        //printf("Start: aInt: %d, bInt: %d, lowerC: %d, upperC: %d, from block: %d, thread: %d, index: %d\n", aInt, bInt, lowerC, upperC, blockIdx.x, threadIdx.x, index);
        int cInt;
        for(cInt = upperC; cInt > lowerC; cInt--){
            int cPowerMod7 = (cInt % 7 == 0) ? 0 : 1;
            mod7SumBCDEF = bPowerMod7 + cPowerMod7;
            if(mod7SumBCDEF > aPowerMod7){
                continue;
            }
            //printf("In c loop: aInt: %d, bInt: %d, cInt: %d, from block: %d, thread: %d\n", aInt, bInt, cInt, blockIdx.x, threadIdx.x);
            if (!isDecomposableIn3Numbers(aInt, bInt, cInt)){
                continue;
            }
            //printf("In c loop: aInt: %d, bInt: %d, cInt: %d, index: %d\n", aInt, bInt, cInt, index);
            int lowerD = (int)(getLowerD(aInt, bInt, cInt)+0.5);    //round up
            int upperD = (int) getUpperD(aInt, bInt, cInt);       //round down. But don't need it explicity

            upperD = (upperD > cInt) ? cInt : upperD;
            
            //printf("lowerD: %d, upperD: %d, index: %d\n", lowerD, upperD, index);

            int dInt;
            for(dInt = upperD; dInt > lowerD; dInt--){
                int dPowerMod7 = (dInt % 7 == 0) ? 0 : 1;
                mod7SumBCDEF = bPowerMod7 + cPowerMod7 + dPowerMod7;
                //////////////////////////////
                //cout << aInt << bInt << cInt << dInt << endl;

                if(mod7SumBCDEF >aPowerMod7){
                    continue;
                }
                if(!isDecomposableIn2Numbers(aInt,bInt,cInt,dInt)){
                    continue;
                }
                //printf("In d loop: aInt: %d, bInt: %d, cInt: %d, dInt: %d, from block: %d, thread: %d, index: %d\n", aInt, bInt, cInt, dInt, blockIdx.x, threadIdx.x, index);
                int lowerE = (int)(getLowerE(aInt, bInt, cInt, dInt)+0.5);    //round up
                int upperE = (int) getUpperE(aInt, bInt, cInt, dInt);       //round down. But don't need it explicity

                upperE = (upperE > dInt) ? dInt : upperE;

                int eInt;
                for(eInt = upperE; eInt > lowerE; eInt--){
                    int ePowerMod7 = (eInt % 7 == 0) ? 0 : 1;
                    mod7SumBCDEF = bPowerMod7 + cPowerMod7 + dPowerMod7 + ePowerMod7;
                    if (mod7SumBCDEF > aPowerMod7){
                        continue;
                    }
                    if (!isDecomposableIn1Numbers(aInt, bInt, cInt, dInt, eInt)){
                        //cout << "isDecomposableIn1Numbers is not satisfied."<<endl;
                        //cout << aInt<<", " << bInt<<", " << cInt<<", " << dInt<<", " << eInt<<", " << fInt<<", " << endl;
                        continue;
                    }
                    //printf("In e loop: aInt: %d, bInt: %d, cInt: %d, dInt: %d, eInt: %d, from block: %d, thread: %d, index: %d\n", aInt, bInt, cInt, dInt, eInt, blockIdx.x, threadIdx.x, index);
                    int upperF = (int)(getUpperF(aInt, bInt, cInt, dInt, eInt)+0.5);
                    int lowerF = upperF - 1;

                    upperF = (upperF > eInt) ? eInt : upperF;

                    int fInt;
                    for(fInt = upperF; fInt > lowerF; fInt--){
                        
                        if(!isABCDEFModEqual(aInt, bInt, cInt, dInt, eInt, fInt)){
                            //cout << "In isABCDEFModEqual:" << aInt<<", " << bInt<<", " << cInt<<", " << dInt<<", " << eInt<<", " << fInt<<", " << endl;
                            //printf("In isABCDEFModEqual (when not equal): aInt: %d, bInt: %d, cInt: %d, dInt: %d, eInt: %d, fInt: %d, from block: %d, thread: %d, index: %d, lowerF: %d, upperF: %d\n", aInt, bInt, cInt, dInt, eInt, fInt, blockIdx.x, threadIdx.x, index, lowerF, upperF);
                            continue;
                        }
                        
                        // printf("Found? aInt: %d, bInt: %d, cInt: %d, dInt: %d, eInt: %d, fInt: %d, from block: %d, thread: %d, index: %d", aInt, bInt, cInt, dInt, eInt, fInt, blockIdx.x, threadIdx.x, index);
                        
            printf("Found? aInt: %d, bInt: %d, cInt: %d, dInt: %d, eInt: %d, fInt: %d, ", aInt, bInt, cInt, dInt, eInt, fInt);

            //printf("Processor %s, rank %d out of %d processors\n", processor_name, world_rank, world_size);
                    }
                }
            }
        }
    }
    cout<< "This thread "<< this_id<<" is finished. lowerB " <<lowerB << " upperB " << upperB  <<endl;
}


int main(int argc, char *argv[]){
    /*
     *the main function receives the following arguments
     *1. aIny
     *2. overallLowerB for this host
     *3. overallUpperB for this host
     */

    //int numberOfthreads = 8;
    int aInt = atoi(argv[1]);
    int overallLowerB = atoi(argv[2]);
    int overallUpperB = atoi(argv[3]);

    //unordered_map<int, int> numberWithMods[aInt];
    for(int num = 0; num <= aInt; num++){
        numberWithMods[num] = generateHashMapForNumber(num);
    }

    //lowerB = overallLowerB + world_rank * (overallUpperB - overallLowerB) / world_size;
    //upperB = lowerB + (overallUpperB - overallLowerB) / world_size;

    int lowerB[NUM_THREADS], upperB[NUM_THREADS];
    for (int i=0; i < NUM_THREADS; i++){       
        lowerB[i] = overallLowerB + i * (overallUpperB - overallLowerB) / NUM_THREADS;
        upperB[i] = lowerB[i] + (overallUpperB - overallLowerB) / NUM_THREADS;

        //cout << "i: "<< i << ", lowerB: " << lowerB[i] << ", upperB: " << upperB[i];
    }
    for(int i=0; i < NUM_THREADS; i++){
        cout << "i: "<< i << ", lowerB: " << lowerB[i] << ", upperB: " << upperB[i]<<endl;
    }
    
    thread t0(thread_function, ref(overallLowerB), ref(overallUpperB), ref(aInt), 0);
    thread t1(thread_function, ref(overallLowerB), ref(overallUpperB), ref(aInt), 1);
    thread t2(thread_function, ref(overallLowerB), ref(overallUpperB), ref(aInt), 2);
    thread t3(thread_function, ref(overallLowerB), ref(overallUpperB), ref(aInt), 3);
    thread t4(thread_function, ref(overallLowerB), ref(overallUpperB), ref(aInt), 4);
    thread t5(thread_function, ref(overallLowerB), ref(overallUpperB), ref(aInt), 5);
    thread t6(thread_function, ref(overallLowerB), ref(overallUpperB), ref(aInt), 6);
    thread t7(thread_function, ref(overallLowerB), ref(overallUpperB), ref(aInt), 7);
    
    t0.join();
    t1.join();
    t2.join();
    t3.join();
    t4.join();
    t5.join();
    t6.join();
    t7.join();


    cout<< "All threads finished on this host." <<endl;

}


